//
// Generated by Bluespec Compiler, version 2021.07-3-g8227dc97 (build 8227dc97)
//
// On Sat Oct  2 15:35:54 +0530 2021
//
//
// Ports:
// Name                         I/O  size props
// rx_rx_from_stage0_deq_ena      O     1
// tx_tx_to_stage2_enq_ena        O     1
// tx_tx_to_stage2_enq_data       O   120
// tx_tx_commitlog_enq_ena        O     1
// tx_tx_commitlog_enq_data       O   309
// RDY_icache_inst_response_put   O     1 reg
// RDY_common_ma_update_eEpoch    O     1 const
// RDY_common_ma_update_wEpoch    O     1 const
// RDY_common_ma_csr_misa_c       O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// rx_rx_from_stage0_notEmpty_b   I     1
// rx_rx_from_stage0_first_deq_rdy_b  I     1
// rx_rx_from_stage0_first_x      I    77
// tx_tx_to_stage2_notFull_b      I     1
// tx_tx_to_stage2_enq_rdy_b      I     1
// tx_tx_commitlog_notFull_b      I     1 unused
// tx_tx_commitlog_enq_rdy_b      I     1
// icache_inst_response_put       I    42
// common_ma_csr_misa_c_c         I     1
// EN_icache_inst_response_put    I     1
// EN_common_ma_update_eEpoch     I     1
// EN_common_ma_update_wEpoch     I     1
// EN_common_ma_csr_misa_c        I     1
//
// Combinational paths from inputs to outputs:
//   (rx_rx_from_stage0_notEmpty_b,
//    rx_rx_from_stage0_first_deq_rdy_b,
//    tx_tx_to_stage2_notFull_b,
//    tx_tx_to_stage2_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    icache_inst_response_put,
//    EN_icache_inst_response_put,
//    EN_common_ma_csr_misa_c) -> rx_rx_from_stage0_deq_ena
//   (rx_rx_from_stage0_notEmpty_b,
//    rx_rx_from_stage0_first_deq_rdy_b,
//    rx_rx_from_stage0_first_x,
//    tx_tx_to_stage2_notFull_b,
//    tx_tx_to_stage2_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    icache_inst_response_put,
//    common_ma_csr_misa_c_c,
//    EN_icache_inst_response_put,
//    EN_common_ma_csr_misa_c) -> tx_tx_to_stage2_enq_ena
//   (rx_rx_from_stage0_notEmpty_b,
//    rx_rx_from_stage0_first_deq_rdy_b,
//    rx_rx_from_stage0_first_x,
//    tx_tx_to_stage2_notFull_b,
//    tx_tx_to_stage2_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    icache_inst_response_put,
//    common_ma_csr_misa_c_c,
//    EN_icache_inst_response_put,
//    EN_common_ma_csr_misa_c) -> tx_tx_to_stage2_enq_data
//   (rx_rx_from_stage0_notEmpty_b,
//    rx_rx_from_stage0_first_deq_rdy_b,
//    rx_rx_from_stage0_first_x,
//    tx_tx_to_stage2_notFull_b,
//    tx_tx_to_stage2_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    icache_inst_response_put,
//    common_ma_csr_misa_c_c,
//    EN_icache_inst_response_put,
//    EN_common_ma_csr_misa_c) -> tx_tx_commitlog_enq_ena
//   (rx_rx_from_stage0_notEmpty_b,
//    rx_rx_from_stage0_first_deq_rdy_b,
//    rx_rx_from_stage0_first_x,
//    tx_tx_to_stage2_notFull_b,
//    tx_tx_to_stage2_enq_rdy_b,
//    tx_tx_commitlog_enq_rdy_b,
//    icache_inst_response_put,
//    common_ma_csr_misa_c_c,
//    EN_icache_inst_response_put,
//    EN_common_ma_csr_misa_c) -> tx_tx_commitlog_enq_data
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkstage1(CLK,
		RST_N,

		rx_rx_from_stage0_notEmpty_b,

		rx_rx_from_stage0_first_deq_rdy_b,

		rx_rx_from_stage0_first_x,

		rx_rx_from_stage0_deq_ena,

		tx_tx_to_stage2_notFull_b,

		tx_tx_to_stage2_enq_rdy_b,

		tx_tx_to_stage2_enq_ena,

		tx_tx_to_stage2_enq_data,

		tx_tx_commitlog_notFull_b,

		tx_tx_commitlog_enq_rdy_b,

		tx_tx_commitlog_enq_ena,

		tx_tx_commitlog_enq_data,

		icache_inst_response_put,
		EN_icache_inst_response_put,
		RDY_icache_inst_response_put,

		EN_common_ma_update_eEpoch,
		RDY_common_ma_update_eEpoch,

		EN_common_ma_update_wEpoch,
		RDY_common_ma_update_wEpoch,

		common_ma_csr_misa_c_c,
		EN_common_ma_csr_misa_c,
		RDY_common_ma_csr_misa_c);
  parameter [63 : 0] hartid = 64'b0;
  input  CLK;
  input  RST_N;

  // action method rx_rx_from_stage0_notEmpty
  input  rx_rx_from_stage0_notEmpty_b;

  // action method rx_rx_from_stage0_first_deq_rdy
  input  rx_rx_from_stage0_first_deq_rdy_b;

  // action method rx_rx_from_stage0_first
  input  [76 : 0] rx_rx_from_stage0_first_x;

  // value method rx_rx_from_stage0_deq_ena
  output rx_rx_from_stage0_deq_ena;

  // action method tx_tx_to_stage2_notFull
  input  tx_tx_to_stage2_notFull_b;

  // action method tx_tx_to_stage2_enq_rdy
  input  tx_tx_to_stage2_enq_rdy_b;

  // value method tx_tx_to_stage2_enq_ena
  output tx_tx_to_stage2_enq_ena;

  // value method tx_tx_to_stage2_enq_data
  output [119 : 0] tx_tx_to_stage2_enq_data;

  // action method tx_tx_commitlog_notFull
  input  tx_tx_commitlog_notFull_b;

  // action method tx_tx_commitlog_enq_rdy
  input  tx_tx_commitlog_enq_rdy_b;

  // value method tx_tx_commitlog_enq_ena
  output tx_tx_commitlog_enq_ena;

  // value method tx_tx_commitlog_enq_data
  output [308 : 0] tx_tx_commitlog_enq_data;

  // action method icache_inst_response_put
  input  [41 : 0] icache_inst_response_put;
  input  EN_icache_inst_response_put;
  output RDY_icache_inst_response_put;

  // action method common_ma_update_eEpoch
  input  EN_common_ma_update_eEpoch;
  output RDY_common_ma_update_eEpoch;

  // action method common_ma_update_wEpoch
  input  EN_common_ma_update_wEpoch;
  output RDY_common_ma_update_wEpoch;

  // action method common_ma_csr_misa_c
  input  common_ma_csr_misa_c_c;
  input  EN_common_ma_csr_misa_c;
  output RDY_common_ma_csr_misa_c;

  // signals for module outputs
  wire [308 : 0] tx_tx_commitlog_enq_data;
  wire [119 : 0] tx_tx_to_stage2_enq_data;
  wire RDY_common_ma_csr_misa_c,
       RDY_common_ma_update_eEpoch,
       RDY_common_ma_update_wEpoch,
       RDY_icache_inst_response_put,
       rx_rx_from_stage0_deq_ena,
       tx_tx_commitlog_enq_ena,
       tx_tx_to_stage2_enq_ena;

  // inlined wires
  wire ff_memory_response_dequeueing_whas, tx_tostage2_w_ena_whas;

  // register rg_action
  reg rg_action;
  wire rg_action_D_IN, rg_action_EN;

  // register rg_eEpoch
  reg rg_eEpoch;
  wire rg_eEpoch_D_IN, rg_eEpoch_EN;

  // register rg_prev
  reg [93 : 0] rg_prev;
  wire [93 : 0] rg_prev_D_IN;
  wire rg_prev_EN;

  // register rg_receiving_upper
  reg rg_receiving_upper;
  wire rg_receiving_upper_D_IN, rg_receiving_upper_EN;

  // register rg_wEpoch
  reg rg_wEpoch;
  wire rg_wEpoch_D_IN, rg_wEpoch_EN;

  // ports of submodule ff_memory_response_ff
  wire [41 : 0] ff_memory_response_ff_D_IN, ff_memory_response_ff_D_OUT;
  wire ff_memory_response_ff_CLR,
       ff_memory_response_ff_DEQ,
       ff_memory_response_ff_EMPTY_N,
       ff_memory_response_ff_ENQ,
       ff_memory_response_ff_FULL_N;

  // ports of submodule ff_memory_response_firstValid
  wire ff_memory_response_firstValid_D_IN,
       ff_memory_response_firstValid_EN,
       ff_memory_response_firstValid_Q_OUT;

  // rule scheduling signals
  wire CAN_FIRE_RL_ff_memory_response_dequeue,
       CAN_FIRE_RL_ff_memory_response_enqueue,
       CAN_FIRE_RL_process_instruction,
       CAN_FIRE_common_ma_csr_misa_c,
       CAN_FIRE_common_ma_update_eEpoch,
       CAN_FIRE_common_ma_update_wEpoch,
       CAN_FIRE_icache_inst_response_put,
       CAN_FIRE_rx_rx_from_stage0_first,
       CAN_FIRE_rx_rx_from_stage0_first_deq_rdy,
       CAN_FIRE_rx_rx_from_stage0_notEmpty,
       CAN_FIRE_tx_tx_commitlog_enq_rdy,
       CAN_FIRE_tx_tx_commitlog_notFull,
       CAN_FIRE_tx_tx_to_stage2_enq_rdy,
       CAN_FIRE_tx_tx_to_stage2_notFull,
       WILL_FIRE_RL_ff_memory_response_dequeue,
       WILL_FIRE_RL_ff_memory_response_enqueue,
       WILL_FIRE_RL_process_instruction,
       WILL_FIRE_common_ma_csr_misa_c,
       WILL_FIRE_common_ma_update_eEpoch,
       WILL_FIRE_common_ma_update_wEpoch,
       WILL_FIRE_icache_inst_response_put,
       WILL_FIRE_rx_rx_from_stage0_first,
       WILL_FIRE_rx_rx_from_stage0_first_deq_rdy,
       WILL_FIRE_rx_rx_from_stage0_notEmpty,
       WILL_FIRE_tx_tx_commitlog_enq_rdy,
       WILL_FIRE_tx_tx_commitlog_notFull,
       WILL_FIRE_tx_tx_to_stage2_enq_rdy,
       WILL_FIRE_tx_tx_to_stage2_notFull;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d324;
  reg TASK_testplusargs___d325;
  reg TASK_testplusargs___d326;
  reg [63 : 0] v__h6465;
  reg TASK_testplusargs___d24;
  reg TASK_testplusargs___d25;
  reg TASK_testplusargs___d26;
  reg [63 : 0] v__h1748;
  reg TASK_testplusargs___d125;
  reg TASK_testplusargs___d126;
  reg TASK_testplusargs___d127;
  reg [63 : 0] v__h2374;
  reg TASK_testplusargs___d161;
  reg TASK_testplusargs___d162;
  reg TASK_testplusargs___d163;
  reg [63 : 0] v__h4055;
  reg TASK_testplusargs___d192;
  reg TASK_testplusargs___d193;
  reg TASK_testplusargs___d194;
  reg [63 : 0] v__h4349;
  reg TASK_testplusargs___d254;
  reg TASK_testplusargs___d255;
  reg TASK_testplusargs___d256;
  reg [63 : 0] v__h4872;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d265;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d267;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d272;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d274;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d278;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d281;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d297;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d305;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d309;
  reg TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d313;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d35;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d38;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d42;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d44;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d52;
  reg TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d54;
  reg NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d130;
  reg TASK_testplusargs_61_OR_TASK_testplusargs_62_A_ETC___d183;
  reg TASK_testplusargs_61_OR_TASK_testplusargs_62_A_ETC___d187;
  reg TASK_testplusargs_92_OR_TASK_testplusargs_93_A_ETC___d198;
  reg TASK_testplusargs_92_OR_TASK_testplusargs_93_A_ETC___d199;
  reg rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d332;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d334;
  // synopsys translate_on

  // remaining internal signals
  wire [63 : 0] IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d176,
		rx_rx_from_stage0_first_x_BITS_63_TO_0__q1,
		x1_avValue_fst_address__h4120,
		x1_avValue_fst_address__h4126,
		x1_avValue_snd_fst_address__h4129,
		x1_avValue_snd_fst_address__h4132,
		x1_avValue_snd_snd_snd_pc__h3836,
		x1_avValue_snd_snd_snd_pc__h3840,
		x1_avValue_snd_snd_snd_snd_pc__h3735,
		x1_avValue_snd_snd_snd_snd_snd_pc__h3802,
		x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3844,
		x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3848,
		x_pc__h3650,
		y_avValue_fst_address__h4123;
  wire [31 : 0] IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73,
		final_instruction___1__h4788,
		final_instruction__h3617,
		pipedata_instruction__h4658,
		y_avValue_snd_fst__h3812,
		y_avValue_snd_snd_snd_fst__h3664,
		y_avValue_snd_snd_snd_fst__h3689,
		y_avValue_snd_snd_snd_fst__h3691,
		y_avValue_snd_snd_snd_fst__h3750,
		y_avValue_snd_snd_snd_fst__h3752;
  wire [15 : 0] x1_avValue_snd_snd_snd_instruction__h3837,
		x1_avValue_snd_snd_snd_instruction__h3841,
		x1_avValue_snd_snd_snd_snd_instruction__h3736,
		x1_avValue_snd_snd_snd_snd_snd_instruction__h3803,
		x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3845,
		x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3849,
		x_instruction__h3651;
  wire [13 : 0] rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_CONCAT_IF_rg__ETC___d159;
  wire [11 : 0] IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d155,
		IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d156,
		IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d157,
		IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d242;
  wire [7 : 0] x1_avValue_fst_history__h4724;
  wire [6 : 0] cause__h3987;
  wire [2 : 0] IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d240,
	       IF_wr_csr_misa_c_wget__7_THEN_IF_IF_rx_fromsta_ETC___d238;
  wire [1 : 0] curr_epoch__h1651,
	       x1_avValue_fst_prediction__h4713,
	       x1_avValue_fst_prediction__h4717,
	       x1_avValue_fst_prediction__h4721,
	       x1_avValue_fst_prediction__h4725,
	       x__h2661,
	       y__h2057,
	       y_avValue_fst_prediction__h4696,
	       y_avValue_fst_prediction__h4709;
  wire IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d294,
       IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d302,
       IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d120,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d103,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d223,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d249,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d271,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d277,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d280,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d296,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d304,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d308,
       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d312,
       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d182,
       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d186,
       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d220,
       IF_rg_prev_9_BIT_11_4_THEN_rg_prev_9_BITS_2_TO_ETC___d97,
       IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100,
       NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d113,
       NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205,
       NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d91,
       NOT_rg_receiving_upper_01_61_OR_IF_ff_memory_r_ETC___d264,
       ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19,
       rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89,
       rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64;

  // action method rx_rx_from_stage0_notEmpty
  assign CAN_FIRE_rx_rx_from_stage0_notEmpty = 1'd1 ;
  assign WILL_FIRE_rx_rx_from_stage0_notEmpty = 1'd1 ;

  // action method rx_rx_from_stage0_first_deq_rdy
  assign CAN_FIRE_rx_rx_from_stage0_first_deq_rdy = 1'd1 ;
  assign WILL_FIRE_rx_rx_from_stage0_first_deq_rdy = 1'd1 ;

  // action method rx_rx_from_stage0_first
  assign CAN_FIRE_rx_rx_from_stage0_first = 1'd1 ;
  assign WILL_FIRE_rx_rx_from_stage0_first = 1'd1 ;

  // value method rx_rx_from_stage0_deq_ena
  assign rx_rx_from_stage0_deq_ena = ff_memory_response_dequeueing_whas ;

  // action method tx_tx_to_stage2_notFull
  assign CAN_FIRE_tx_tx_to_stage2_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_to_stage2_notFull = 1'd1 ;

  // action method tx_tx_to_stage2_enq_rdy
  assign CAN_FIRE_tx_tx_to_stage2_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_to_stage2_enq_rdy = 1'd1 ;

  // value method tx_tx_to_stage2_enq_ena
  assign tx_tx_to_stage2_enq_ena = tx_tostage2_w_ena_whas ;

  // value method tx_tx_to_stage2_enq_data
  assign tx_tx_to_stage2_enq_data =
	     { rg_receiving_upper &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d220,
	       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d223,
	       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d242,
	       IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d176,
	       pipedata_instruction__h4658,
	       curr_epoch__h1651,
	       IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d249,
	       cause__h3987 } ;

  // action method tx_tx_commitlog_notFull
  assign CAN_FIRE_tx_tx_commitlog_notFull = 1'd1 ;
  assign WILL_FIRE_tx_tx_commitlog_notFull = 1'd1 ;

  // action method tx_tx_commitlog_enq_rdy
  assign CAN_FIRE_tx_tx_commitlog_enq_rdy = 1'd1 ;
  assign WILL_FIRE_tx_tx_commitlog_enq_rdy = 1'd1 ;

  // value method tx_tx_commitlog_enq_ena
  assign tx_tx_commitlog_enq_ena = tx_tostage2_w_ena_whas ;

  // value method tx_tx_commitlog_enq_data
  assign tx_tx_commitlog_enq_data =
	     { 2'bxx /* unspecified value */ ,
	       IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d176,
	       y_avValue_snd_snd_snd_fst__h3664,
	       2'd0,
	       209'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;

  // action method icache_inst_response_put
  assign RDY_icache_inst_response_put = ff_memory_response_ff_FULL_N ;
  assign CAN_FIRE_icache_inst_response_put = ff_memory_response_ff_FULL_N ;
  assign WILL_FIRE_icache_inst_response_put = EN_icache_inst_response_put ;

  // action method common_ma_update_eEpoch
  assign RDY_common_ma_update_eEpoch = 1'd1 ;
  assign CAN_FIRE_common_ma_update_eEpoch = 1'd1 ;
  assign WILL_FIRE_common_ma_update_eEpoch = EN_common_ma_update_eEpoch ;

  // action method common_ma_update_wEpoch
  assign RDY_common_ma_update_wEpoch = 1'd1 ;
  assign CAN_FIRE_common_ma_update_wEpoch = 1'd1 ;
  assign WILL_FIRE_common_ma_update_wEpoch = EN_common_ma_update_wEpoch ;

  // action method common_ma_csr_misa_c
  assign RDY_common_ma_csr_misa_c = 1'd1 ;
  assign CAN_FIRE_common_ma_csr_misa_c = 1'd1 ;
  assign WILL_FIRE_common_ma_csr_misa_c = EN_common_ma_csr_misa_c ;

  // submodule ff_memory_response_ff
  FIFO2 #(.width(32'd42), .guarded(1'd0)) ff_memory_response_ff(.RST(RST_N),
								.CLK(CLK),
								.D_IN(ff_memory_response_ff_D_IN),
								.ENQ(ff_memory_response_ff_ENQ),
								.DEQ(ff_memory_response_ff_DEQ),
								.CLR(ff_memory_response_ff_CLR),
								.D_OUT(ff_memory_response_ff_D_OUT),
								.FULL_N(ff_memory_response_ff_FULL_N),
								.EMPTY_N(ff_memory_response_ff_EMPTY_N));

  // submodule ff_memory_response_firstValid
  RevertReg #(.width(32'd1),
	      .init(1'd1)) ff_memory_response_firstValid(.CLK(CLK),
							 .D_IN(ff_memory_response_firstValid_D_IN),
							 .EN(ff_memory_response_firstValid_EN),
							 .Q_OUT(ff_memory_response_firstValid_Q_OUT));

  // rule RL_process_instruction
  assign CAN_FIRE_RL_process_instruction =
	     ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19 &&
	     rx_rx_from_stage0_notEmpty_b &&
	     tx_tx_to_stage2_notFull_b ;
  assign WILL_FIRE_RL_process_instruction = CAN_FIRE_RL_process_instruction ;

  // rule RL_ff_memory_response_enqueue
  assign CAN_FIRE_RL_ff_memory_response_enqueue =
	     EN_icache_inst_response_put &&
	     (!ff_memory_response_dequeueing_whas ||
	      ff_memory_response_ff_EMPTY_N) ;
  assign WILL_FIRE_RL_ff_memory_response_enqueue =
	     CAN_FIRE_RL_ff_memory_response_enqueue ;

  // rule RL_ff_memory_response_dequeue
  assign CAN_FIRE_RL_ff_memory_response_dequeue =
	     ff_memory_response_dequeueing_whas &&
	     ff_memory_response_ff_EMPTY_N ;
  assign WILL_FIRE_RL_ff_memory_response_dequeue =
	     CAN_FIRE_RL_ff_memory_response_dequeue ;

  // inlined wires
  assign tx_tostage2_w_ena_whas =
	     WILL_FIRE_RL_process_instruction &&
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	     NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 ;
  assign ff_memory_response_dequeueing_whas =
	     WILL_FIRE_RL_process_instruction &&
	     (rg_prev[15:14] == 2'b11 || rg_action ||
	      !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	      !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89) ;

  // register rg_action
  assign rg_action_D_IN =
	     !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ||
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	     IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d120 ;
  assign rg_action_EN =
	     WILL_FIRE_RL_process_instruction &&
	     (NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d113 ||
	      !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89) ;

  // register rg_eEpoch
  assign rg_eEpoch_D_IN = ~rg_eEpoch ;
  assign rg_eEpoch_EN = EN_common_ma_update_eEpoch ;

  // register rg_prev
  assign rg_prev_D_IN =
	     { x_pc__h3650,
	       x_instruction__h3651,
	       rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_CONCAT_IF_rg__ETC___d159 } ;
  assign rg_prev_EN = CAN_FIRE_RL_process_instruction ;

  // register rg_receiving_upper
  assign rg_receiving_upper_D_IN =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	     IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d103 ;
  assign rg_receiving_upper_EN =
	     WILL_FIRE_RL_process_instruction &&
	     NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d91 ;

  // register rg_wEpoch
  assign rg_wEpoch_D_IN = ~rg_wEpoch ;
  assign rg_wEpoch_EN = EN_common_ma_update_wEpoch ;

  // submodule ff_memory_response_ff
  assign ff_memory_response_ff_D_IN = icache_inst_response_put ;
  assign ff_memory_response_ff_ENQ = CAN_FIRE_RL_ff_memory_response_enqueue ;
  assign ff_memory_response_ff_DEQ = CAN_FIRE_RL_ff_memory_response_dequeue ;
  assign ff_memory_response_ff_CLR = 1'b0 ;

  // submodule ff_memory_response_firstValid
  assign ff_memory_response_firstValid_D_IN = 1'd1 ;
  assign ff_memory_response_firstValid_EN =
	     ff_memory_response_dequeueing_whas ;

  // remaining internal signals
  module_fn_decompress instance_fn_decompress_0(.fn_decompress_inst(final_instruction__h3617[15:0]),
						.fn_decompress(final_instruction___1__h4788));
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d155 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rg_prev[11:0] :
	       (common_ma_csr_misa_c_c ?
		  rx_rx_from_stage0_first_x[75:64] :
		  rg_prev[11:0]) ;
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d294 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       !rx_rx_from_stage0_first_x[64] :
	       (common_ma_csr_misa_c_c ?
		  rx_rx_from_stage0_first_x[75] ||
		  !rx_rx_from_stage0_first_x[64] :
		  !rx_rx_from_stage0_first_x[64]) ;
  assign IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d302 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rx_rx_from_stage0_first_x[64] :
	       (common_ma_csr_misa_c_c ?
		  !rx_rx_from_stage0_first_x[75] &&
		  rx_rx_from_stage0_first_x[64] :
		  rx_rx_from_stage0_first_x[64]) ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d120 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	       2'b11 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	       2'b11 ||
	       !rx_rx_from_stage0_first_x[75] &&
	       !IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100 ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d156 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       ((IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
		 2'b11) ?
		  rx_rx_from_stage0_first_x[75:64] :
		  rg_prev[11:0]) :
	       IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d155 ;
  assign IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d240 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       { y_avValue_fst_prediction__h4696,
		 rx_rx_from_stage0_first_x[75] &&
		 rx_rx_from_stage0_first_x[64] } :
	       ((IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
		 2'b11) ?
		  rx_rx_from_stage0_first_x[66:64] :
		  IF_wr_csr_misa_c_wget__7_THEN_IF_IF_rx_fromsta_ETC___d238) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d103 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 &&
	       IF_rg_prev_9_BIT_11_4_THEN_rg_prev_9_BITS_2_TO_ETC___d97 :
	       rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c ||
	       rx_rx_from_stage0_first_x[75] ||
	       IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d157 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       ((rg_prev[15:14] == 2'b11) ?
		  rx_rx_from_stage0_first_x[75:64] :
		  rg_prev[11:0]) :
	       IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d156 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d223 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] != 2'b11 :
	       ((rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
		  2'b11 :
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] !=
		  2'b11 &&
		  common_ma_csr_misa_c_c) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d242 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       { rg_prev[11:3], x__h2661, rg_prev[11] && rg_prev[0] } :
	       { rx_rx_from_stage0_first_x[75:67],
		 IF_IF_rx_fromstage0_w_data_whas__0_THEN_rx_fro_ETC___d240 } ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d249 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d220 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d220 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d271 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 :
	       ((rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
		  2'b11 :
		  IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
		  2'b11 ||
		  !common_ma_csr_misa_c_c) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d277 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       !rg_prev[11] :
	       !rx_rx_from_stage0_first_x[75] ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d280 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[11] :
	       rx_rx_from_stage0_first_x[75] ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d296 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       !rg_prev[11] || !rg_prev[0] :
	       ((rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
		  !rx_rx_from_stage0_first_x[75] ||
		  !rx_rx_from_stage0_first_x[64] :
		  IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d294) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d304 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[11] && rg_prev[0] :
	       ((rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
		  rx_rx_from_stage0_first_x[75] &&
		  rx_rx_from_stage0_first_x[64] :
		  IF_IF_ff_memory_response_ff_i_notEmpty_THEN_ff_ETC___d302) ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d308 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] != 2'b11 ||
	       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d182 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d182 ;
  assign IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d312 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[15:14] == 2'b11 &&
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d186 :
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d186 ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d182 =
	     ff_memory_response_ff_EMPTY_N ?
	       !ff_memory_response_ff_D_OUT[9] :
	       EN_icache_inst_response_put && !icache_inst_response_put[9] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d186 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[9] :
	       !EN_icache_inst_response_put || icache_inst_response_put[9] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d220 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[9] :
	       icache_inst_response_put[9] ;
  assign IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[41:10] :
	       icache_inst_response_put[41:10] ;
  assign IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d176 =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
	       x1_avValue_snd_fst_address__h4132 :
	       rx_rx_from_stage0_first_x[63:0] ;
  assign IF_rg_prev_9_BIT_11_4_THEN_rg_prev_9_BITS_2_TO_ETC___d97 =
	     x__h2661 <= 2'd1 ;
  assign IF_rx_fromstage0_w_data_whas__0_THEN_rx_fromst_ETC___d100 =
	     rx_rx_from_stage0_first_x[66:65] <= 2'd1 ;
  assign IF_wr_csr_misa_c_wget__7_THEN_IF_IF_rx_fromsta_ETC___d238 =
	     common_ma_csr_misa_c_c ?
	       { y_avValue_fst_prediction__h4709,
		 !rx_rx_from_stage0_first_x[75] &&
		 rx_rx_from_stage0_first_x[64] } :
	       rx_rx_from_stage0_first_x[66:64] ;
  assign NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d113 =
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 &&
	     (!IF_rg_prev_9_BIT_11_4_THEN_rg_prev_9_BITS_2_TO_ETC___d97 ||
	      rg_prev[15:14] != 2'b11) ||
	     (rg_action ||
	      !rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) &&
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11 ||
	      common_ma_csr_misa_c_c) ;
  assign NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 =
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	     !rx_rx_from_stage0_first_x[76] ||
	     !common_ma_csr_misa_c_c ||
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] !=
	     2'b11 ;
  assign NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d91 =
	     !rg_action &&
	     rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 ||
	     rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	     2'b11 ||
	     !rx_rx_from_stage0_first_x[76] &&
	     IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] !=
	     2'b11 &&
	     common_ma_csr_misa_c_c ||
	     !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ;
  assign NOT_rg_receiving_upper_01_61_OR_IF_ff_memory_r_ETC___d264 =
	     !rg_receiving_upper ||
	     (ff_memory_response_ff_EMPTY_N ?
		!ff_memory_response_ff_D_OUT[9] :
		!icache_inst_response_put[9]) ;
  assign cause__h3987 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[8:2] :
	       icache_inst_response_put[8:2] ;
  assign curr_epoch__h1651 = { rg_eEpoch, rg_wEpoch } ;
  assign ff_memory_response_firstValid_read_AND_ff_memo_ETC___d19 =
	     ff_memory_response_firstValid_Q_OUT &&
	     (ff_memory_response_ff_EMPTY_N || EN_icache_inst_response_put) &&
	     rx_rx_from_stage0_first_deq_rdy_b &&
	     EN_common_ma_csr_misa_c &&
	     tx_tx_commitlog_enq_rdy_b &&
	     tx_tx_to_stage2_enq_rdy_b ;
  assign final_instruction__h3617 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       y_avValue_snd_snd_snd_fst__h3689 :
	       y_avValue_snd_snd_snd_fst__h3691 ;
  assign pipedata_instruction__h4658 =
	     (rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	      IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d223) ?
	       final_instruction___1__h4788 :
	       final_instruction__h3617 ;
  assign rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_CONCAT_IF_rg__ETC___d159 =
	     { curr_epoch__h1651,
	       rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
		 IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d157 :
		 rg_prev[11:0] } ;
  assign rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 =
	     curr_epoch__h1651 == y__h2057 ;
  assign rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64 =
	     rg_prev[13:12] == curr_epoch__h1651 ;
  assign rx_rx_from_stage0_first_x_BITS_63_TO_0__q1 =
	     rx_rx_from_stage0_first_x[63:0] ;
  assign x1_avValue_fst_address__h4120 =
	     { rg_prev[93:32], 1'd1, rg_prev[30] } ;
  assign x1_avValue_fst_address__h4126 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	      2'b11) ?
	       rx_rx_from_stage0_first_x[63:0] :
	       y_avValue_fst_address__h4123 ;
  assign x1_avValue_fst_history__h4724 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       rg_prev[10:3] :
	       rx_rx_from_stage0_first_x[74:67] ;
  assign x1_avValue_fst_prediction__h4713 =
	     common_ma_csr_misa_c_c ?
	       y_avValue_fst_prediction__h4709 :
	       rx_rx_from_stage0_first_x[66:65] ;
  assign x1_avValue_fst_prediction__h4717 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rx_rx_from_stage0_first_x[66:65] :
	       x1_avValue_fst_prediction__h4713 ;
  assign x1_avValue_fst_prediction__h4721 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       y_avValue_fst_prediction__h4696 :
	       x1_avValue_fst_prediction__h4717 ;
  assign x1_avValue_fst_prediction__h4725 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x__h2661 :
	       x1_avValue_fst_prediction__h4721 ;
  assign x1_avValue_snd_fst_address__h4129 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       x1_avValue_fst_address__h4126 :
	       rx_rx_from_stage0_first_x[63:0] ;
  assign x1_avValue_snd_fst_address__h4132 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x1_avValue_fst_address__h4120 :
	       x1_avValue_snd_fst_address__h4129 ;
  assign x1_avValue_snd_snd_snd_instruction__h3837 =
	     common_ma_csr_misa_c_c ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] :
	       rg_prev[29:14] ;
  assign x1_avValue_snd_snd_snd_instruction__h3841 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rg_prev[29:14] :
	       x1_avValue_snd_snd_snd_instruction__h3837 ;
  assign x1_avValue_snd_snd_snd_pc__h3836 =
	     common_ma_csr_misa_c_c ?
	       rx_rx_from_stage0_first_x[63:0] :
	       rg_prev[93:30] ;
  assign x1_avValue_snd_snd_snd_pc__h3840 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       rg_prev[93:30] :
	       x1_avValue_snd_snd_snd_pc__h3836 ;
  assign x1_avValue_snd_snd_snd_snd_instruction__h3736 =
	     (rg_prev[15:14] == 2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] :
	       rg_prev[29:14] ;
  assign x1_avValue_snd_snd_snd_snd_pc__h3735 =
	     (rg_prev[15:14] == 2'b11) ?
	       rx_rx_from_stage0_first_x[63:0] :
	       rg_prev[93:30] ;
  assign x1_avValue_snd_snd_snd_snd_snd_instruction__h3803 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	      2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] :
	       rg_prev[29:14] ;
  assign x1_avValue_snd_snd_snd_snd_snd_pc__h3802 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[17:16] ==
	      2'b11) ?
	       rx_rx_from_stage0_first_x[63:0] :
	       rg_prev[93:30] ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3845 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       x1_avValue_snd_snd_snd_snd_snd_instruction__h3803 :
	       x1_avValue_snd_snd_snd_instruction__h3841 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3849 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x1_avValue_snd_snd_snd_snd_instruction__h3736 :
	       x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3845 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3844 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       x1_avValue_snd_snd_snd_snd_snd_pc__h3802 :
	       x1_avValue_snd_snd_snd_pc__h3840 ;
  assign x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3848 =
	     (!rg_action &&
	      rg_prev_9_BITS_13_TO_12_0_EQ_rg_eEpoch_1_CONCA_ETC___d64) ?
	       x1_avValue_snd_snd_snd_snd_pc__h3735 :
	       x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3844 ;
  assign x__h2661 = rg_prev[11] ? rg_prev[2:1] : 2'd1 ;
  assign x_instruction__h3651 =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
	       x1_avValue_snd_snd_snd_snd_snd_snd_instruction__h3849 :
	       rg_prev[29:14] ;
  assign x_pc__h3650 =
	     rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 ?
	       x1_avValue_snd_snd_snd_snd_snd_snd_pc__h3848 :
	       rg_prev[93:30] ;
  assign y__h2057 =
	     ff_memory_response_ff_EMPTY_N ?
	       ff_memory_response_ff_D_OUT[1:0] :
	       icache_inst_response_put[1:0] ;
  assign y_avValue_fst_address__h4123 =
	     { rx_rx_from_stage0_first_x_BITS_63_TO_0__q1[63:2],
	       1'd1,
	       rx_rx_from_stage0_first_x_BITS_63_TO_0__q1[0] } ;
  assign y_avValue_fst_prediction__h4696 =
	     rx_rx_from_stage0_first_x[75] ?
	       rx_rx_from_stage0_first_x[66:65] :
	       2'd1 ;
  assign y_avValue_fst_prediction__h4709 =
	     rx_rx_from_stage0_first_x[75] ?
	       2'd1 :
	       rx_rx_from_stage0_first_x[66:65] ;
  assign y_avValue_snd_fst__h3812 =
	     { 16'd0,
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[15:0] } ;
  assign y_avValue_snd_snd_snd_fst__h3664 = final_instruction__h3617 ;
  assign y_avValue_snd_snd_snd_fst__h3689 =
	     { (rg_prev[15:14] == 2'b11) ?
		 IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[15:0] :
		 16'd0,
	       rg_prev[29:14] } ;
  assign y_avValue_snd_snd_snd_fst__h3691 =
	     (rx_rx_from_stage0_first_x[76] && common_ma_csr_misa_c_c) ?
	       y_avValue_snd_snd_snd_fst__h3750 :
	       y_avValue_snd_snd_snd_fst__h3752 ;
  assign y_avValue_snd_snd_snd_fst__h3750 =
	     { 16'd0,
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[31:16] } ;
  assign y_avValue_snd_snd_snd_fst__h3752 =
	     (IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73[1:0] ==
	      2'b11) ?
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73 :
	       y_avValue_snd_fst__h3812 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_action <= `BSV_ASSIGNMENT_DELAY 1'd1;
	rg_eEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_prev <= `BSV_ASSIGNMENT_DELAY
	    94'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
	rg_receiving_upper <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_wEpoch <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_action_EN) rg_action <= `BSV_ASSIGNMENT_DELAY rg_action_D_IN;
	if (rg_eEpoch_EN) rg_eEpoch <= `BSV_ASSIGNMENT_DELAY rg_eEpoch_D_IN;
	if (rg_prev_EN) rg_prev <= `BSV_ASSIGNMENT_DELAY rg_prev_D_IN;
	if (rg_receiving_upper_EN)
	  rg_receiving_upper <= `BSV_ASSIGNMENT_DELAY rg_receiving_upper_D_IN;
	if (rg_wEpoch_EN) rg_wEpoch <= `BSV_ASSIGNMENT_DELAY rg_wEpoch_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_action = 1'h0;
    rg_eEpoch = 1'h0;
    rg_prev = 94'h2AAAAAAAAAAAAAAAAAAAAAAA;
    rg_receiving_upper = 1'h0;
    rg_wEpoch = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put)
	begin
	  TASK_testplusargs___d324 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put)
	begin
	  TASK_testplusargs___d325 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put)
	begin
	  TASK_testplusargs___d326 = $test$plusargs("l3");
	  #0;
	end
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d332 =
	(TASK_testplusargs___d324 ||
	 TASK_testplusargs___d325 && TASK_testplusargs___d326) &&
	icache_inst_response_put[9];
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d334 =
	(TASK_testplusargs___d324 ||
	 TASK_testplusargs___d325 && TASK_testplusargs___d326) &&
	!icache_inst_response_put[9];
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put)
	begin
	  v__h6465 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("[%10d", v__h6465, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("[%2d]STAGE1: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("IMem_core_response { ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("'h%h", icache_inst_response_put[41:10]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d332)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d334)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("'h%h", icache_inst_response_put[8:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("'h%h", icache_inst_response_put[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_icache_inst_response_put &&
	  (TASK_testplusargs___d324 ||
	   TASK_testplusargs___d325 && TASK_testplusargs___d326))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d24 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d25 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d26 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d35 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	!rx_rx_from_stage0_first_x[76];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d38 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	rx_rx_from_stage0_first_x[76];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d42 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	!rx_rx_from_stage0_first_x[75];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d44 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	rx_rx_from_stage0_first_x[75];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d54 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	rx_rx_from_stage0_first_x[64];
    TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d52 =
	(TASK_testplusargs___d24 ||
	 TASK_testplusargs___d25 && TASK_testplusargs___d26) &&
	!rx_rx_from_stage0_first_x[64];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h1748 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("[%10d", v__h1748, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("[%2d]STAGE1 : Prediction: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("Stage0PC { ", "discard: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d35)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d38)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("BTBResponse { ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d42)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d44)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("'h%h", rx_rx_from_stage0_first_x[74:67]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("'h%h", rx_rx_from_stage0_first_x[66:65]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d52)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_4_OR_TASK_testplusargs_5_AND_ETC___d54)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write(", ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("'h%h", rx_rx_from_stage0_first_x[63:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d24 ||
	   TASK_testplusargs___d25 && TASK_testplusargs___d26))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  TASK_testplusargs___d125 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  TASK_testplusargs___d126 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  TASK_testplusargs___d127 = $test$plusargs("l1");
	  #0;
	end
    NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d130 =
	!rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	(TASK_testplusargs___d125 ||
	 TASK_testplusargs___d126 && TASK_testplusargs___d127);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  !rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89)
	begin
	  v__h2374 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d130)
	$write("[%10d", v__h2374, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d130)
	$write("[%2d]STAGE1 : Dropping Instruction. ExpEpoch:%b CurrEpoch:%b",
	       hartid,
	       y__h2057,
	       curr_epoch__h1651);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  NOT_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff__ETC___d130)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d161 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d162 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d163 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_61_OR_TASK_testplusargs_62_A_ETC___d183 =
	(TASK_testplusargs___d161 ||
	 TASK_testplusargs___d162 && TASK_testplusargs___d163) &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_NOT_f_ETC___d182;
    TASK_testplusargs_61_OR_TASK_testplusargs_62_A_ETC___d187 =
	(TASK_testplusargs___d161 ||
	 TASK_testplusargs___d162 && TASK_testplusargs___d163) &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d186;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4055 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("[%10d", v__h4055, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("[%2d]STAGE1 : PC:%h: ",
	       hartid,
	       IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d176);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("IMem_core_response { ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("'h%h",
	       IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d73);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_61_OR_TASK_testplusargs_62_A_ETC___d183)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_61_OR_TASK_testplusargs_62_A_ETC___d187)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("'h%h", cause__h3987);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("'h%h", y__h2057, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d161 ||
	   TASK_testplusargs___d162 && TASK_testplusargs___d163))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d192 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d193 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  TASK_testplusargs___d194 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_92_OR_TASK_testplusargs_93_A_ETC___d198 =
	(TASK_testplusargs___d192 ||
	 TASK_testplusargs___d193 && TASK_testplusargs___d194) &&
	rg_action;
    TASK_testplusargs_92_OR_TASK_testplusargs_93_A_ETC___d199 =
	(TASK_testplusargs___d192 ||
	 TASK_testplusargs___d193 && TASK_testplusargs___d194) &&
	!rg_action;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction)
	begin
	  v__h4349 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d192 ||
	   TASK_testplusargs___d193 && TASK_testplusargs___d194))
	$write("[%10d", v__h4349, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d192 ||
	   TASK_testplusargs___d193 && TASK_testplusargs___d194))
	$write("[%2d]STAGE1 : rg_action: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_92_OR_TASK_testplusargs_93_A_ETC___d198)
	$write("None");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  TASK_testplusargs_92_OR_TASK_testplusargs_93_A_ETC___d199)
	$write("CheckPrev");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d192 ||
	   TASK_testplusargs___d193 && TASK_testplusargs___d194))
	$write(" misa[c]:%b discard:%b rg_receiving_upper:%b",
	       hartid,
	       common_ma_csr_misa_c_c,
	       rx_rx_from_stage0_first_x[76],
	       rg_receiving_upper);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  (TASK_testplusargs___d192 ||
	   TASK_testplusargs___d193 && TASK_testplusargs___d194))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205)
	begin
	  TASK_testplusargs___d254 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205)
	begin
	  TASK_testplusargs___d255 = $test$plusargs("mstage1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205)
	begin
	  TASK_testplusargs___d256 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d265 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	NOT_rg_receiving_upper_01_61_OR_IF_ff_memory_r_ETC___d264;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d267 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	rg_receiving_upper &&
	IF_ff_memory_response_ff_i_notEmpty_THEN_ff_me_ETC___d220;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d272 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d271;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d274 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d223;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d278 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d277;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d281 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d280;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d297 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d296;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d305 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d304;
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d309 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d308;
    rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259 =
	rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256);
    TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d313 =
	(TASK_testplusargs___d254 ||
	 TASK_testplusargs___d255 && TASK_testplusargs___d256) &&
	IF_NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO__ETC___d312;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205)
	begin
	  v__h4872 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("[%10d", v__h4872, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("[%2d]STAGE1 : Enquing: ", hartid);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("PIPE1 { ", "upper_err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d265)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d267)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "compressed: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d272)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d274)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "btbresponse: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("BTBResponse { ", "hi: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d278)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d281)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "history: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("'h%h", x1_avValue_fst_history__h4724);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "prediction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("'h%h", x1_avValue_fst_prediction__h4725);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "btbhit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d297)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d305)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "program_counter: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("'h%h",
	       IF_rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_m_ETC___d176);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "instruction: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("'h%h", pipedata_instruction__h4658);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("'h%h", curr_epoch__h1651);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d309)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d89 &&
	  NOT_rg_action_7_8_AND_rg_prev_9_BITS_13_TO_12__ETC___d205 &&
	  TASK_testplusargs_54_OR_TASK_testplusargs_55_A_ETC___d313)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("'h%h", cause__h3987, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_process_instruction &&
	  rg_eEpoch_1_CONCAT_rg_wEpoch_2_3_EQ_IF_ff_memo_ETC___d259)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkstage1

