//
// Generated by Bluespec Compiler, version 2021.07-3-g8227dc97 (build 8227dc97)
//
// On Sat Oct  2 15:35:17 +0530 2021
//
//
// Ports:
// Name                         I/O  size props
// chk_interrupt                  O     8
// chk_interrupt_prv              I     2
// chk_interrupt_mstatus          I    64
// chk_interrupt_mip              I    17
// chk_interrupt_mie              I    17
// chk_interrupt_mideleg          I    17
//
// Combinational paths from inputs to outputs:
//   (chk_interrupt_prv,
//    chk_interrupt_mstatus,
//    chk_interrupt_mip,
//    chk_interrupt_mie,
//    chk_interrupt_mideleg) -> chk_interrupt
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_chk_interrupt(chk_interrupt_prv,
			    chk_interrupt_mstatus,
			    chk_interrupt_mip,
			    chk_interrupt_mie,
			    chk_interrupt_mideleg,
			    chk_interrupt);
  // value method chk_interrupt
  input  [1 : 0] chk_interrupt_prv;
  input  [63 : 0] chk_interrupt_mstatus;
  input  [16 : 0] chk_interrupt_mip;
  input  [16 : 0] chk_interrupt_mie;
  input  [16 : 0] chk_interrupt_mideleg;
  output [7 : 0] chk_interrupt;

  // signals for module outputs
  wire [7 : 0] chk_interrupt;

  // remaining internal signals
  wire [16 : 0] pending_interrupts__h39,
		s_interrupts__h38,
		x__h101,
		x__h157,
		x__h159,
		x__h89,
		y__h102,
		y__h104,
		y__h158;
  wire [6 : 0] x__h26;
  wire x__h109, x__h165;

  // value method chk_interrupt
  assign chk_interrupt = { x__h26, pending_interrupts__h39 != 17'd0 } ;

  // remaining internal signals
  assign pending_interrupts__h39 = x__h89 | s_interrupts__h38 ;
  assign s_interrupts__h38 = x__h157 & y__h158 ;
  assign x__h101 = x__h159 & y__h104 ;
  assign x__h109 = chk_interrupt_prv != 2'd3 || chk_interrupt_mstatus[3] ;
  assign x__h157 = x__h159 & chk_interrupt_mideleg ;
  assign x__h159 = chk_interrupt_mie & chk_interrupt_mip ;
  assign x__h165 =
	     chk_interrupt_prv == 2'd0 ||
	     chk_interrupt_mstatus[1] && chk_interrupt_prv == 2'd1 ;
  assign x__h26 =
	     { 1'd1,
	       pending_interrupts__h39[11] ?
		 6'd11 :
		 (pending_interrupts__h39[3] ?
		    6'd3 :
		    (pending_interrupts__h39[7] ?
		       6'd7 :
		       (pending_interrupts__h39[9] ?
			  6'd9 :
			  (pending_interrupts__h39[1] ?
			     6'd1 :
			     (pending_interrupts__h39[5] ?
				6'd5 :
				(pending_interrupts__h39[8] ?
				   6'd8 :
				   (pending_interrupts__h39[0] ?
				      6'd0 :
				      (pending_interrupts__h39[4] ?
					 6'd4 :
					 6'd63)))))))) } ;
  assign x__h89 = x__h101 & y__h102 ;
  assign y__h102 = ~chk_interrupt_mideleg ;
  assign y__h104 = {17{x__h109}} ;
  assign y__h158 = {17{x__h165}} ;
endmodule  // module_chk_interrupt

