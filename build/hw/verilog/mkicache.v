//
// Generated by Bluespec Compiler, version 2021.07-3-g8227dc97 (build 8227dc97)
//
// On Sat Oct  2 15:35:41 +0530 2021
//
//
// Ports:
// Name                         I/O  size props
// RDY_put_core_req_put           O     1
// get_core_resp_get              O    42
// RDY_get_core_resp_get          O     1
// get_read_mem_req_get           O    44 reg
// RDY_get_read_mem_req_get       O     1 reg
// RDY_put_read_mem_resp_put      O     1
// RDY_put_pa_from_tlb_put        O     1
// RDY_ma_cache_enable            O     1 const
// RDY_ma_curr_priv               O     1 const
// mv_cache_available             O     1
// RDY_mv_cache_available         O     1 const
// pmp_cfg_0                      I     8
// pmp_cfg_1                      I     8
// pmp_cfg_2                      I     8
// pmp_cfg_3                      I     8
// pmp_addr_0                     I    32
// pmp_addr_1                     I    32
// pmp_addr_2                     I    32
// pmp_addr_3                     I    32
// CLK                            I     1 clock
// RST_N                          I     1 reset
// put_core_req_put               I    67
// put_read_mem_resp_put          I    66
// put_pa_from_tlb_put            I    40
// ma_cache_enable_c              I     1
// ma_curr_priv_c                 I     2
// EN_put_core_req_put            I     1
// EN_put_read_mem_resp_put       I     1
// EN_put_pa_from_tlb_put         I     1
// EN_ma_cache_enable             I     1
// EN_ma_curr_priv                I     1
// EN_get_core_resp_get           I     1
// EN_get_read_mem_req_get        I     1
//
// Combinational paths from inputs to outputs:
//   (put_read_mem_resp_put,
//    put_pa_from_tlb_put,
//    ma_cache_enable_c,
//    ma_curr_priv_c,
//    EN_put_read_mem_resp_put,
//    EN_put_pa_from_tlb_put,
//    EN_ma_cache_enable,
//    EN_ma_curr_priv,
//    pmp_cfg_0,
//    pmp_cfg_1,
//    pmp_cfg_2,
//    pmp_cfg_3,
//    pmp_addr_0,
//    pmp_addr_1,
//    pmp_addr_2,
//    pmp_addr_3) -> RDY_get_core_resp_get
//   (put_read_mem_resp_put,
//    put_pa_from_tlb_put,
//    ma_cache_enable_c,
//    ma_curr_priv_c,
//    EN_put_read_mem_resp_put,
//    EN_put_pa_from_tlb_put,
//    EN_ma_cache_enable,
//    EN_ma_curr_priv,
//    pmp_cfg_0,
//    pmp_cfg_1,
//    pmp_cfg_2,
//    pmp_cfg_3,
//    pmp_addr_0,
//    pmp_addr_1,
//    pmp_addr_2,
//    pmp_addr_3) -> get_core_resp_get
//   EN_ma_cache_enable -> RDY_put_core_req_put
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkicache(pmp_cfg_0,
		pmp_cfg_1,
		pmp_cfg_2,
		pmp_cfg_3,
		pmp_addr_0,
		pmp_addr_1,
		pmp_addr_2,
		pmp_addr_3,
		CLK,
		RST_N,

		put_core_req_put,
		EN_put_core_req_put,
		RDY_put_core_req_put,

		EN_get_core_resp_get,
		get_core_resp_get,
		RDY_get_core_resp_get,

		EN_get_read_mem_req_get,
		get_read_mem_req_get,
		RDY_get_read_mem_req_get,

		put_read_mem_resp_put,
		EN_put_read_mem_resp_put,
		RDY_put_read_mem_resp_put,

		put_pa_from_tlb_put,
		EN_put_pa_from_tlb_put,
		RDY_put_pa_from_tlb_put,

		ma_cache_enable_c,
		EN_ma_cache_enable,
		RDY_ma_cache_enable,

		ma_curr_priv_c,
		EN_ma_curr_priv,
		RDY_ma_curr_priv,

		mv_cache_available,
		RDY_mv_cache_available);
  parameter [31 : 0] id = 32'b0;
  input  [7 : 0] pmp_cfg_0;
  input  [7 : 0] pmp_cfg_1;
  input  [7 : 0] pmp_cfg_2;
  input  [7 : 0] pmp_cfg_3;
  input  [31 : 0] pmp_addr_0;
  input  [31 : 0] pmp_addr_1;
  input  [31 : 0] pmp_addr_2;
  input  [31 : 0] pmp_addr_3;
  input  CLK;
  input  RST_N;

  // action method put_core_req_put
  input  [66 : 0] put_core_req_put;
  input  EN_put_core_req_put;
  output RDY_put_core_req_put;

  // actionvalue method get_core_resp_get
  input  EN_get_core_resp_get;
  output [41 : 0] get_core_resp_get;
  output RDY_get_core_resp_get;

  // actionvalue method get_read_mem_req_get
  input  EN_get_read_mem_req_get;
  output [43 : 0] get_read_mem_req_get;
  output RDY_get_read_mem_req_get;

  // action method put_read_mem_resp_put
  input  [65 : 0] put_read_mem_resp_put;
  input  EN_put_read_mem_resp_put;
  output RDY_put_read_mem_resp_put;

  // action method put_pa_from_tlb_put
  input  [39 : 0] put_pa_from_tlb_put;
  input  EN_put_pa_from_tlb_put;
  output RDY_put_pa_from_tlb_put;

  // action method ma_cache_enable
  input  ma_cache_enable_c;
  input  EN_ma_cache_enable;
  output RDY_ma_cache_enable;

  // action method ma_curr_priv
  input  [1 : 0] ma_curr_priv_c;
  input  EN_ma_curr_priv;
  output RDY_ma_curr_priv;

  // value method mv_cache_available
  output mv_cache_available;
  output RDY_mv_cache_available;

  // signals for module outputs
  wire [43 : 0] get_read_mem_req_get;
  wire [41 : 0] get_core_resp_get;
  wire RDY_get_core_resp_get,
       RDY_get_read_mem_req_get,
       RDY_ma_cache_enable,
       RDY_ma_curr_priv,
       RDY_mv_cache_available,
       RDY_put_core_req_put,
       RDY_put_pa_from_tlb_put,
       RDY_put_read_mem_resp_put,
       mv_cache_available;

  // inlined wires
  wire [66 : 0] ff_read_mem_response_rv_port0__write_1,
		ff_read_mem_response_rv_port1__read,
		ff_read_mem_response_rv_port1__write_1,
		ff_read_mem_response_rv_port2__read;
  wire [42 : 0] ff_core_response_rv_port0__write_1,
		ff_core_response_rv_port1__read,
		ff_core_response_rv_port1__write_1,
		ff_core_response_rv_port2__read;
  wire [41 : 0] wr_fb_response_wget,
		wr_nc_response_wget,
		wr_ram_response_wget;
  wire [40 : 0] ff_from_tlb_rv_port0__write_1,
		ff_from_tlb_rv_port1__read,
		ff_from_tlb_rv_port1__write_1,
		ff_from_tlb_rv_port2__read;
  wire [1 : 0] wr_fb_state_wget, wr_ram_state_wget;
  wire _mav_allocate_line_RL_rl_send_memory_request_EN_m_fillbuffer_wget,
       ff_read_mem_response_rv_EN_port1__write,
       wr_fault_whas,
       wr_fb_response_whas,
       wr_ram_state_whas;

  // register ff_core_response_rv
  reg [42 : 0] ff_core_response_rv;
  wire [42 : 0] ff_core_response_rv_D_IN;
  wire ff_core_response_rv_EN;

  // register ff_from_tlb_rv
  reg [40 : 0] ff_from_tlb_rv;
  wire [40 : 0] ff_from_tlb_rv_D_IN;
  wire ff_from_tlb_rv_EN;

  // register ff_read_mem_response_rv
  reg [66 : 0] ff_read_mem_response_rv;
  wire [66 : 0] ff_read_mem_response_rv_D_IN;
  wire ff_read_mem_response_rv_EN;

  // register replacement_random_r
  reg [3 : 0] replacement_random_r;
  reg [3 : 0] replacement_random_r_D_IN;
  wire replacement_random_r_EN;

  // register replacement_rg_init
  reg replacement_rg_init;
  wire replacement_rg_init_D_IN, replacement_rg_init_EN;

  // register rg_fence_stall
  reg rg_fence_stall;
  wire rg_fence_stall_D_IN, rg_fence_stall_EN;

  // register rg_handling_miss
  reg rg_handling_miss;
  wire rg_handling_miss_D_IN, rg_handling_miss_EN;

  // register rg_performing_replay
  reg rg_performing_replay;
  wire rg_performing_replay_D_IN, rg_performing_replay_EN;

  // register rg_polling_mode
  reg rg_polling_mode;
  wire rg_polling_mode_D_IN, rg_polling_mode_EN;

  // register rg_recent_req
  reg [5 : 0] rg_recent_req;
  wire [5 : 0] rg_recent_req_D_IN;
  wire rg_recent_req_EN;

  // register v_reg_valid_0
  reg [3 : 0] v_reg_valid_0;
  wire [3 : 0] v_reg_valid_0_D_IN;
  wire v_reg_valid_0_EN;

  // register v_reg_valid_1
  reg [3 : 0] v_reg_valid_1;
  wire [3 : 0] v_reg_valid_1_D_IN;
  wire v_reg_valid_1_EN;

  // register v_reg_valid_10
  reg [3 : 0] v_reg_valid_10;
  wire [3 : 0] v_reg_valid_10_D_IN;
  wire v_reg_valid_10_EN;

  // register v_reg_valid_11
  reg [3 : 0] v_reg_valid_11;
  wire [3 : 0] v_reg_valid_11_D_IN;
  wire v_reg_valid_11_EN;

  // register v_reg_valid_12
  reg [3 : 0] v_reg_valid_12;
  wire [3 : 0] v_reg_valid_12_D_IN;
  wire v_reg_valid_12_EN;

  // register v_reg_valid_13
  reg [3 : 0] v_reg_valid_13;
  wire [3 : 0] v_reg_valid_13_D_IN;
  wire v_reg_valid_13_EN;

  // register v_reg_valid_14
  reg [3 : 0] v_reg_valid_14;
  wire [3 : 0] v_reg_valid_14_D_IN;
  wire v_reg_valid_14_EN;

  // register v_reg_valid_15
  reg [3 : 0] v_reg_valid_15;
  wire [3 : 0] v_reg_valid_15_D_IN;
  wire v_reg_valid_15_EN;

  // register v_reg_valid_16
  reg [3 : 0] v_reg_valid_16;
  wire [3 : 0] v_reg_valid_16_D_IN;
  wire v_reg_valid_16_EN;

  // register v_reg_valid_17
  reg [3 : 0] v_reg_valid_17;
  wire [3 : 0] v_reg_valid_17_D_IN;
  wire v_reg_valid_17_EN;

  // register v_reg_valid_18
  reg [3 : 0] v_reg_valid_18;
  wire [3 : 0] v_reg_valid_18_D_IN;
  wire v_reg_valid_18_EN;

  // register v_reg_valid_19
  reg [3 : 0] v_reg_valid_19;
  wire [3 : 0] v_reg_valid_19_D_IN;
  wire v_reg_valid_19_EN;

  // register v_reg_valid_2
  reg [3 : 0] v_reg_valid_2;
  wire [3 : 0] v_reg_valid_2_D_IN;
  wire v_reg_valid_2_EN;

  // register v_reg_valid_20
  reg [3 : 0] v_reg_valid_20;
  wire [3 : 0] v_reg_valid_20_D_IN;
  wire v_reg_valid_20_EN;

  // register v_reg_valid_21
  reg [3 : 0] v_reg_valid_21;
  wire [3 : 0] v_reg_valid_21_D_IN;
  wire v_reg_valid_21_EN;

  // register v_reg_valid_22
  reg [3 : 0] v_reg_valid_22;
  wire [3 : 0] v_reg_valid_22_D_IN;
  wire v_reg_valid_22_EN;

  // register v_reg_valid_23
  reg [3 : 0] v_reg_valid_23;
  wire [3 : 0] v_reg_valid_23_D_IN;
  wire v_reg_valid_23_EN;

  // register v_reg_valid_24
  reg [3 : 0] v_reg_valid_24;
  wire [3 : 0] v_reg_valid_24_D_IN;
  wire v_reg_valid_24_EN;

  // register v_reg_valid_25
  reg [3 : 0] v_reg_valid_25;
  wire [3 : 0] v_reg_valid_25_D_IN;
  wire v_reg_valid_25_EN;

  // register v_reg_valid_26
  reg [3 : 0] v_reg_valid_26;
  wire [3 : 0] v_reg_valid_26_D_IN;
  wire v_reg_valid_26_EN;

  // register v_reg_valid_27
  reg [3 : 0] v_reg_valid_27;
  wire [3 : 0] v_reg_valid_27_D_IN;
  wire v_reg_valid_27_EN;

  // register v_reg_valid_28
  reg [3 : 0] v_reg_valid_28;
  wire [3 : 0] v_reg_valid_28_D_IN;
  wire v_reg_valid_28_EN;

  // register v_reg_valid_29
  reg [3 : 0] v_reg_valid_29;
  wire [3 : 0] v_reg_valid_29_D_IN;
  wire v_reg_valid_29_EN;

  // register v_reg_valid_3
  reg [3 : 0] v_reg_valid_3;
  wire [3 : 0] v_reg_valid_3_D_IN;
  wire v_reg_valid_3_EN;

  // register v_reg_valid_30
  reg [3 : 0] v_reg_valid_30;
  wire [3 : 0] v_reg_valid_30_D_IN;
  wire v_reg_valid_30_EN;

  // register v_reg_valid_31
  reg [3 : 0] v_reg_valid_31;
  wire [3 : 0] v_reg_valid_31_D_IN;
  wire v_reg_valid_31_EN;

  // register v_reg_valid_32
  reg [3 : 0] v_reg_valid_32;
  wire [3 : 0] v_reg_valid_32_D_IN;
  wire v_reg_valid_32_EN;

  // register v_reg_valid_33
  reg [3 : 0] v_reg_valid_33;
  wire [3 : 0] v_reg_valid_33_D_IN;
  wire v_reg_valid_33_EN;

  // register v_reg_valid_34
  reg [3 : 0] v_reg_valid_34;
  wire [3 : 0] v_reg_valid_34_D_IN;
  wire v_reg_valid_34_EN;

  // register v_reg_valid_35
  reg [3 : 0] v_reg_valid_35;
  wire [3 : 0] v_reg_valid_35_D_IN;
  wire v_reg_valid_35_EN;

  // register v_reg_valid_36
  reg [3 : 0] v_reg_valid_36;
  wire [3 : 0] v_reg_valid_36_D_IN;
  wire v_reg_valid_36_EN;

  // register v_reg_valid_37
  reg [3 : 0] v_reg_valid_37;
  wire [3 : 0] v_reg_valid_37_D_IN;
  wire v_reg_valid_37_EN;

  // register v_reg_valid_38
  reg [3 : 0] v_reg_valid_38;
  wire [3 : 0] v_reg_valid_38_D_IN;
  wire v_reg_valid_38_EN;

  // register v_reg_valid_39
  reg [3 : 0] v_reg_valid_39;
  wire [3 : 0] v_reg_valid_39_D_IN;
  wire v_reg_valid_39_EN;

  // register v_reg_valid_4
  reg [3 : 0] v_reg_valid_4;
  wire [3 : 0] v_reg_valid_4_D_IN;
  wire v_reg_valid_4_EN;

  // register v_reg_valid_40
  reg [3 : 0] v_reg_valid_40;
  wire [3 : 0] v_reg_valid_40_D_IN;
  wire v_reg_valid_40_EN;

  // register v_reg_valid_41
  reg [3 : 0] v_reg_valid_41;
  wire [3 : 0] v_reg_valid_41_D_IN;
  wire v_reg_valid_41_EN;

  // register v_reg_valid_42
  reg [3 : 0] v_reg_valid_42;
  wire [3 : 0] v_reg_valid_42_D_IN;
  wire v_reg_valid_42_EN;

  // register v_reg_valid_43
  reg [3 : 0] v_reg_valid_43;
  wire [3 : 0] v_reg_valid_43_D_IN;
  wire v_reg_valid_43_EN;

  // register v_reg_valid_44
  reg [3 : 0] v_reg_valid_44;
  wire [3 : 0] v_reg_valid_44_D_IN;
  wire v_reg_valid_44_EN;

  // register v_reg_valid_45
  reg [3 : 0] v_reg_valid_45;
  wire [3 : 0] v_reg_valid_45_D_IN;
  wire v_reg_valid_45_EN;

  // register v_reg_valid_46
  reg [3 : 0] v_reg_valid_46;
  wire [3 : 0] v_reg_valid_46_D_IN;
  wire v_reg_valid_46_EN;

  // register v_reg_valid_47
  reg [3 : 0] v_reg_valid_47;
  wire [3 : 0] v_reg_valid_47_D_IN;
  wire v_reg_valid_47_EN;

  // register v_reg_valid_48
  reg [3 : 0] v_reg_valid_48;
  wire [3 : 0] v_reg_valid_48_D_IN;
  wire v_reg_valid_48_EN;

  // register v_reg_valid_49
  reg [3 : 0] v_reg_valid_49;
  wire [3 : 0] v_reg_valid_49_D_IN;
  wire v_reg_valid_49_EN;

  // register v_reg_valid_5
  reg [3 : 0] v_reg_valid_5;
  wire [3 : 0] v_reg_valid_5_D_IN;
  wire v_reg_valid_5_EN;

  // register v_reg_valid_50
  reg [3 : 0] v_reg_valid_50;
  wire [3 : 0] v_reg_valid_50_D_IN;
  wire v_reg_valid_50_EN;

  // register v_reg_valid_51
  reg [3 : 0] v_reg_valid_51;
  wire [3 : 0] v_reg_valid_51_D_IN;
  wire v_reg_valid_51_EN;

  // register v_reg_valid_52
  reg [3 : 0] v_reg_valid_52;
  wire [3 : 0] v_reg_valid_52_D_IN;
  wire v_reg_valid_52_EN;

  // register v_reg_valid_53
  reg [3 : 0] v_reg_valid_53;
  wire [3 : 0] v_reg_valid_53_D_IN;
  wire v_reg_valid_53_EN;

  // register v_reg_valid_54
  reg [3 : 0] v_reg_valid_54;
  wire [3 : 0] v_reg_valid_54_D_IN;
  wire v_reg_valid_54_EN;

  // register v_reg_valid_55
  reg [3 : 0] v_reg_valid_55;
  wire [3 : 0] v_reg_valid_55_D_IN;
  wire v_reg_valid_55_EN;

  // register v_reg_valid_56
  reg [3 : 0] v_reg_valid_56;
  wire [3 : 0] v_reg_valid_56_D_IN;
  wire v_reg_valid_56_EN;

  // register v_reg_valid_57
  reg [3 : 0] v_reg_valid_57;
  wire [3 : 0] v_reg_valid_57_D_IN;
  wire v_reg_valid_57_EN;

  // register v_reg_valid_58
  reg [3 : 0] v_reg_valid_58;
  wire [3 : 0] v_reg_valid_58_D_IN;
  wire v_reg_valid_58_EN;

  // register v_reg_valid_59
  reg [3 : 0] v_reg_valid_59;
  wire [3 : 0] v_reg_valid_59_D_IN;
  wire v_reg_valid_59_EN;

  // register v_reg_valid_6
  reg [3 : 0] v_reg_valid_6;
  wire [3 : 0] v_reg_valid_6_D_IN;
  wire v_reg_valid_6_EN;

  // register v_reg_valid_60
  reg [3 : 0] v_reg_valid_60;
  wire [3 : 0] v_reg_valid_60_D_IN;
  wire v_reg_valid_60_EN;

  // register v_reg_valid_61
  reg [3 : 0] v_reg_valid_61;
  wire [3 : 0] v_reg_valid_61_D_IN;
  wire v_reg_valid_61_EN;

  // register v_reg_valid_62
  reg [3 : 0] v_reg_valid_62;
  wire [3 : 0] v_reg_valid_62_D_IN;
  wire v_reg_valid_62_EN;

  // register v_reg_valid_63
  reg [3 : 0] v_reg_valid_63;
  wire [3 : 0] v_reg_valid_63_D_IN;
  wire v_reg_valid_63_EN;

  // register v_reg_valid_7
  reg [3 : 0] v_reg_valid_7;
  wire [3 : 0] v_reg_valid_7_D_IN;
  wire v_reg_valid_7_EN;

  // register v_reg_valid_8
  reg [3 : 0] v_reg_valid_8;
  wire [3 : 0] v_reg_valid_8_D_IN;
  wire v_reg_valid_8_EN;

  // register v_reg_valid_9
  reg [3 : 0] v_reg_valid_9;
  wire [3 : 0] v_reg_valid_9_D_IN;
  wire v_reg_valid_9_EN;

  // ports of submodule ff_core_request
  wire [66 : 0] ff_core_request_D_IN, ff_core_request_D_OUT;
  wire ff_core_request_CLR,
       ff_core_request_DEQ,
       ff_core_request_EMPTY_N,
       ff_core_request_ENQ,
       ff_core_request_FULL_N;

  // ports of submodule ff_pending_req
  wire [6 : 0] ff_pending_req_D_IN, ff_pending_req_D_OUT;
  wire ff_pending_req_CLR,
       ff_pending_req_DEQ,
       ff_pending_req_EMPTY_N,
       ff_pending_req_ENQ,
       ff_pending_req_FULL_N;

  // ports of submodule ff_read_mem_request
  wire [43 : 0] ff_read_mem_request_D_IN, ff_read_mem_request_D_OUT;
  wire ff_read_mem_request_CLR,
       ff_read_mem_request_DEQ,
       ff_read_mem_request_EMPTY_N,
       ff_read_mem_request_ENQ,
       ff_read_mem_request_FULL_N;

  // ports of submodule m_data
  reg [5 : 0] m_data_ma_request_index;
  reg [1 : 0] m_data_ma_request_way;
  wire [543 : 0] m_data_mv_read_response;
  wire [511 : 0] m_data_ma_request_dataline;
  wire [15 : 0] m_data_ma_request_banks;
  wire [3 : 0] m_data_mv_read_response_blocknum,
	       m_data_mv_read_response_wayselect;
  wire m_data_EN_ma_request, m_data_ma_request_read_write;

  // ports of submodule m_fillbuffer
  wire [544 : 0] m_fillbuffer_mv_release_info;
  wire [511 : 0] m_fillbuffer_mav_allocate_line_dataline;
  wire [65 : 0] m_fillbuffer_ma_fill_from_memory_mem_resp;
  wire [38 : 0] m_fillbuffer_mav_polling_response;
  wire [31 : 0] m_fillbuffer_mav_allocate_line_address,
		m_fillbuffer_mav_polling_response_address;
  wire [3 : 0] m_fillbuffer_ma_fill_from_memory_init_bank;
  wire [1 : 0] m_fillbuffer_ma_fill_from_memory_fbindex,
	       m_fillbuffer_mav_allocate_line,
	       m_fillbuffer_mav_polling_response_fbindex;
  wire m_fillbuffer_EN_ma_fill_from_memory,
       m_fillbuffer_EN_ma_perform_release,
       m_fillbuffer_EN_mav_allocate_line,
       m_fillbuffer_EN_mav_polling_response,
       m_fillbuffer_mav_allocate_line_from_ram,
       m_fillbuffer_mav_polling_response_fill,
       m_fillbuffer_mv_fbempty,
       m_fillbuffer_mv_fbfull,
       m_fillbuffer_mv_fbhead_valid;

  // ports of submodule m_tag
  reg [5 : 0] m_tag_ma_request_index;
  reg [1 : 0] m_tag_ma_request_way;
  wire [35 : 0] m_tag_mv_read_response;
  wire [31 : 0] m_tag_ma_request_address, m_tag_mv_read_response_address_in;
  wire [1 : 0] m_tag_mv_read_response_wayselect;
  wire m_tag_EN_ma_request, m_tag_ma_request_read_write;

  // rule scheduling signals
  wire CAN_FIRE_RL_replacement_initialize_lfsr,
       CAN_FIRE_RL_rl_capture_io_response,
       CAN_FIRE_RL_rl_fence_operation,
       CAN_FIRE_RL_rl_fill_from_memory,
       CAN_FIRE_RL_rl_fillbuffer_check,
       CAN_FIRE_RL_rl_perform_replay,
       CAN_FIRE_RL_rl_ram_check,
       CAN_FIRE_RL_rl_release_from_fillbuffer,
       CAN_FIRE_RL_rl_response_to_core,
       CAN_FIRE_RL_rl_send_memory_request,
       CAN_FIRE___me_check_2,
       CAN_FIRE_get_core_resp_get,
       CAN_FIRE_get_read_mem_req_get,
       CAN_FIRE_ma_cache_enable,
       CAN_FIRE_ma_curr_priv,
       CAN_FIRE_put_core_req_put,
       CAN_FIRE_put_pa_from_tlb_put,
       CAN_FIRE_put_read_mem_resp_put,
       WILL_FIRE_RL_replacement_initialize_lfsr,
       WILL_FIRE_RL_rl_capture_io_response,
       WILL_FIRE_RL_rl_fence_operation,
       WILL_FIRE_RL_rl_fill_from_memory,
       WILL_FIRE_RL_rl_fillbuffer_check,
       WILL_FIRE_RL_rl_perform_replay,
       WILL_FIRE_RL_rl_ram_check,
       WILL_FIRE_RL_rl_release_from_fillbuffer,
       WILL_FIRE_RL_rl_response_to_core,
       WILL_FIRE_RL_rl_send_memory_request,
       WILL_FIRE___me_check_2,
       WILL_FIRE_get_core_resp_get,
       WILL_FIRE_get_read_mem_req_get,
       WILL_FIRE_ma_cache_enable,
       WILL_FIRE_ma_curr_priv,
       WILL_FIRE_put_core_req_put,
       WILL_FIRE_put_pa_from_tlb_put,
       WILL_FIRE_put_read_mem_resp_put;

  // inputs to muxes for submodule ports
  wire [3 : 0] MUX_replacement_random_r_write_1__VAL_2,
	       MUX_v_reg_valid_0_write_1__VAL_1;
  wire MUX_m_data_ma_request_1__SEL_1,
       MUX_m_data_ma_request_1__SEL_2,
       MUX_rg_performing_replay_write_1__SEL_1,
       MUX_v_reg_valid_0_write_1__SEL_1,
       MUX_v_reg_valid_1_write_1__SEL_1,
       MUX_v_reg_valid_10_write_1__SEL_1,
       MUX_v_reg_valid_11_write_1__SEL_1,
       MUX_v_reg_valid_12_write_1__SEL_1,
       MUX_v_reg_valid_13_write_1__SEL_1,
       MUX_v_reg_valid_14_write_1__SEL_1,
       MUX_v_reg_valid_15_write_1__SEL_1,
       MUX_v_reg_valid_16_write_1__SEL_1,
       MUX_v_reg_valid_17_write_1__SEL_1,
       MUX_v_reg_valid_18_write_1__SEL_1,
       MUX_v_reg_valid_19_write_1__SEL_1,
       MUX_v_reg_valid_2_write_1__SEL_1,
       MUX_v_reg_valid_20_write_1__SEL_1,
       MUX_v_reg_valid_21_write_1__SEL_1,
       MUX_v_reg_valid_22_write_1__SEL_1,
       MUX_v_reg_valid_23_write_1__SEL_1,
       MUX_v_reg_valid_24_write_1__SEL_1,
       MUX_v_reg_valid_25_write_1__SEL_1,
       MUX_v_reg_valid_26_write_1__SEL_1,
       MUX_v_reg_valid_27_write_1__SEL_1,
       MUX_v_reg_valid_28_write_1__SEL_1,
       MUX_v_reg_valid_29_write_1__SEL_1,
       MUX_v_reg_valid_3_write_1__SEL_1,
       MUX_v_reg_valid_30_write_1__SEL_1,
       MUX_v_reg_valid_31_write_1__SEL_1,
       MUX_v_reg_valid_32_write_1__SEL_1,
       MUX_v_reg_valid_33_write_1__SEL_1,
       MUX_v_reg_valid_34_write_1__SEL_1,
       MUX_v_reg_valid_35_write_1__SEL_1,
       MUX_v_reg_valid_36_write_1__SEL_1,
       MUX_v_reg_valid_37_write_1__SEL_1,
       MUX_v_reg_valid_38_write_1__SEL_1,
       MUX_v_reg_valid_39_write_1__SEL_1,
       MUX_v_reg_valid_4_write_1__SEL_1,
       MUX_v_reg_valid_40_write_1__SEL_1,
       MUX_v_reg_valid_41_write_1__SEL_1,
       MUX_v_reg_valid_42_write_1__SEL_1,
       MUX_v_reg_valid_43_write_1__SEL_1,
       MUX_v_reg_valid_44_write_1__SEL_1,
       MUX_v_reg_valid_45_write_1__SEL_1,
       MUX_v_reg_valid_46_write_1__SEL_1,
       MUX_v_reg_valid_47_write_1__SEL_1,
       MUX_v_reg_valid_48_write_1__SEL_1,
       MUX_v_reg_valid_49_write_1__SEL_1,
       MUX_v_reg_valid_5_write_1__SEL_1,
       MUX_v_reg_valid_50_write_1__SEL_1,
       MUX_v_reg_valid_51_write_1__SEL_1,
       MUX_v_reg_valid_52_write_1__SEL_1,
       MUX_v_reg_valid_53_write_1__SEL_1,
       MUX_v_reg_valid_54_write_1__SEL_1,
       MUX_v_reg_valid_55_write_1__SEL_1,
       MUX_v_reg_valid_56_write_1__SEL_1,
       MUX_v_reg_valid_57_write_1__SEL_1,
       MUX_v_reg_valid_58_write_1__SEL_1,
       MUX_v_reg_valid_59_write_1__SEL_1,
       MUX_v_reg_valid_6_write_1__SEL_1,
       MUX_v_reg_valid_60_write_1__SEL_1,
       MUX_v_reg_valid_61_write_1__SEL_1,
       MUX_v_reg_valid_62_write_1__SEL_1,
       MUX_v_reg_valid_63_write_1__SEL_1,
       MUX_v_reg_valid_7_write_1__SEL_1,
       MUX_v_reg_valid_8_write_1__SEL_1,
       MUX_v_reg_valid_9_write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg TASK_testplusargs___d1034;
  reg TASK_testplusargs___d1035;
  reg TASK_testplusargs___d1036;
  reg [63 : 0] v__h52097;
  reg TASK_testplusargs___d1048;
  reg TASK_testplusargs___d1049;
  reg TASK_testplusargs___d1050;
  reg [63 : 0] v__h52469;
  reg TASK_testplusargs___d38;
  reg TASK_testplusargs___d39;
  reg TASK_testplusargs___d40;
  reg [63 : 0] v__h12257;
  reg TASK_testplusargs___d68;
  reg TASK_testplusargs___d69;
  reg TASK_testplusargs___d70;
  reg [63 : 0] v__h12534;
  reg TASK_testplusargs___d77;
  reg TASK_testplusargs___d78;
  reg TASK_testplusargs___d79;
  reg [63 : 0] v__h12705;
  reg TASK_testplusargs___d200;
  reg TASK_testplusargs___d201;
  reg TASK_testplusargs___d202;
  reg [63 : 0] v__h14924;
  reg TASK_testplusargs___d207;
  reg TASK_testplusargs___d208;
  reg TASK_testplusargs___d209;
  reg [63 : 0] v__h15077;
  reg TASK_testplusargs___d215;
  reg TASK_testplusargs___d216;
  reg TASK_testplusargs___d217;
  reg [63 : 0] v__h15185;
  reg TASK_testplusargs___d224;
  reg TASK_testplusargs___d225;
  reg TASK_testplusargs___d226;
  reg [63 : 0] v__h15402;
  reg TASK_testplusargs___d245;
  reg TASK_testplusargs___d246;
  reg TASK_testplusargs___d247;
  reg [63 : 0] v__h15599;
  reg TASK_testplusargs___d255;
  reg TASK_testplusargs___d256;
  reg TASK_testplusargs___d257;
  reg [63 : 0] v__h15823;
  reg TASK_testplusargs___d263;
  reg TASK_testplusargs___d264;
  reg TASK_testplusargs___d265;
  reg [63 : 0] v__h15996;
  reg TASK_testplusargs___d271;
  reg TASK_testplusargs___d272;
  reg TASK_testplusargs___d273;
  reg [63 : 0] v__h16120;
  reg TASK_testplusargs___d804;
  reg TASK_testplusargs___d805;
  reg TASK_testplusargs___d806;
  reg [63 : 0] v__h46741;
  reg TASK_testplusargs___d827;
  reg TASK_testplusargs___d828;
  reg TASK_testplusargs___d829;
  reg [63 : 0] v__h47037;
  reg TASK_testplusargs___d13;
  reg TASK_testplusargs___d14;
  reg TASK_testplusargs___d15;
  reg [63 : 0] v__h6482;
  reg TASK_testplusargs___d318;
  reg TASK_testplusargs___d319;
  reg TASK_testplusargs___d320;
  reg [63 : 0] v__h16565;
  reg TASK_testplusargs___d325;
  reg TASK_testplusargs___d326;
  reg TASK_testplusargs___d327;
  reg [63 : 0] v__h16764;
  reg TASK_testplusargs___d349;
  reg TASK_testplusargs___d350;
  reg TASK_testplusargs___d351;
  reg [63 : 0] v__h17062;
  reg TASK_testplusargs___d724;
  reg TASK_testplusargs___d725;
  reg TASK_testplusargs___d726;
  reg [63 : 0] v__h45904;
  reg TASK_testplusargs___d841;
  reg TASK_testplusargs___d842;
  reg TASK_testplusargs___d843;
  reg [63 : 0] v__h47282;
  reg TASK_testplusargs___d771;
  reg TASK_testplusargs___d772;
  reg TASK_testplusargs___d773;
  reg [63 : 0] v__h46180;
  reg TASK_testplusargs___d781;
  reg TASK_testplusargs___d782;
  reg TASK_testplusargs___d783;
  reg [63 : 0] v__h46396;
  reg TASK_testplusargs___d788;
  reg TASK_testplusargs___d789;
  reg TASK_testplusargs___d790;
  reg [63 : 0] v__h46469;
  reg TASK_testplusargs___d868;
  reg TASK_testplusargs___d869;
  reg TASK_testplusargs___d870;
  reg [63 : 0] v__h47699;
  reg TASK_testplusargs___d1018;
  reg TASK_testplusargs___d1019;
  reg TASK_testplusargs___d1020;
  reg [63 : 0] v__h51792;
  reg m_fillbuffer_mav_polling_response_30_BIT_0_38__ETC___d260;
  reg NOT_m_fillbuffer_mav_polling_response_30_BIT_0_ETC___d268;
  reg TASK_testplusargs_25_OR_TASK_testplusargs_26_A_ETC___d339;
  reg TASK_testplusargs_25_OR_TASK_testplusargs_26_A_ETC___d343;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d46;
  reg TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d67;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d235;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d237;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d239;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d241;
  reg m_fillbuffer_mav_polling_response_30_BIT_1_34__ETC___d250;
  reg NOT_m_fillbuffer_mav_polling_response_30_BIT_1_ETC___d276;
  reg IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d323;
  reg IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330;
  reg IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d354;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d744;
  reg TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d745;
  reg wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d776;
  reg NOT_wr_cache_enable_wget__88_59_OR_ff_from_tlb_ETC___d786;
  reg wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d793;
  reg TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d812;
  reg TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d814;
  reg TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d816;
  reg TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d818;
  reg TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d833;
  reg TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d834;
  reg TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d835;
  reg TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d836;
  reg NOT_m_fillbuffer_mv_release_info__38_BIT_0_87__ETC___d1023;
  reg TASK_testplusargs_034_OR_TASK_testplusargs_035_ETC___d1042;
  reg TASK_testplusargs_034_OR_TASK_testplusargs_035_ETC___d1044;
  // synopsys translate_on

  // remaining internal signals
  reg [3 : 0] SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150,
	      valid__h47370;
  wire [63 : 0] response_word__h46870;
  wire [31 : 0] lv_response_word__h17319,
		lv_response_word__h17335,
		phyaddr__h12187,
		phyaddr__h45987,
		response_word__h12978;
  wire [7 : 0] fn_pmp_lookup___d165, x_burst_len__h46010;
  wire [6 : 0] lv_cause__h12189,
	       lv_response_cause__h12999,
	       lv_response_cause__h17321;
  wire [5 : 0] set_index__h52204, x__h46896;
  wire [4 : 0] x__h13003;
  wire [3 : 0] lv_hitmask__h12637, x__h49168;
  wire [2 : 0] burst_size__h45984,
	       x__h14637,
	       x__h14649,
	       x__h14661,
	       y__h14638,
	       y__h14650,
	       y__h14662;
  wire [1 : 0] IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298,
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288,
	       IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293,
	       lv_response_epochs__h17322,
	       v__h47367,
	       x__h16256,
	       x__h16268,
	       y__h16257,
	       y__h16269;
  wire IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d364,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d376,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d384,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d393,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d401,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d410,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d418,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d427,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d435,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d444,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d452,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d461,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d469,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d478,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d486,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d495,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d503,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d512,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d520,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d529,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d537,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d546,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d554,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d563,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d571,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d580,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d588,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d597,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d605,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d614,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d622,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d631,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d639,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d649,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d657,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d665,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d674,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d682,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d691,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d699,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d708,
       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d716,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d361,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d371,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d374,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d382,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d391,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d399,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d408,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d416,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d425,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d433,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d442,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d450,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d459,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d467,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d476,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d484,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d493,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d501,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d510,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d518,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d527,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d535,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d544,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d552,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d561,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d569,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d578,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d586,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d595,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d603,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d612,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d620,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d629,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d637,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d647,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d655,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d663,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d672,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d680,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d689,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d697,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d706,
       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d714,
       NOT_0_CONCAT_m_tag_mv_read_response_ff_from_tl_ETC___d199,
       NOT_IF_wr_fb_state_whas__96_THEN_wr_fb_state_w_ETC___d737,
       NOT_IF_wr_nc_state_whas__86_THEN_wr_nc_state_w_ETC___d733,
       NOT_IF_wr_ram_state_whas__91_THEN_wr_ram_state_ETC___d741,
       NOT_ff_core_request_notEmpty__49_50_AND_NOT_wr_ETC___d860,
       b__h16276,
       ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760,
       m_fillbuffer_mv_release_info__38_BITS_12_TO_7__ETC___d858,
       wr_fault_whas__83_AND_wr_fault_wget__84_85_OR__ETC___d295;

  // action method put_core_req_put
  assign RDY_put_core_req_put =
	     !ff_core_response_rv[42] && !rg_fence_stall &&
	     !m_fillbuffer_mv_fbfull &&
	     !rg_performing_replay &&
	     EN_ma_cache_enable &&
	     ff_core_request_FULL_N ;
  assign CAN_FIRE_put_core_req_put = RDY_put_core_req_put ;
  assign WILL_FIRE_put_core_req_put = EN_put_core_req_put ;

  // actionvalue method get_core_resp_get
  assign get_core_resp_get = ff_core_response_rv_port1__read[41:0] ;
  assign RDY_get_core_resp_get = ff_core_response_rv_port1__read[42] ;
  assign CAN_FIRE_get_core_resp_get = ff_core_response_rv_port1__read[42] ;
  assign WILL_FIRE_get_core_resp_get = EN_get_core_resp_get ;

  // actionvalue method get_read_mem_req_get
  assign get_read_mem_req_get = ff_read_mem_request_D_OUT ;
  assign RDY_get_read_mem_req_get = ff_read_mem_request_EMPTY_N ;
  assign CAN_FIRE_get_read_mem_req_get = ff_read_mem_request_EMPTY_N ;
  assign WILL_FIRE_get_read_mem_req_get = EN_get_read_mem_req_get ;

  // action method put_read_mem_resp_put
  assign RDY_put_read_mem_resp_put = !ff_read_mem_response_rv[66] ;
  assign CAN_FIRE_put_read_mem_resp_put = !ff_read_mem_response_rv[66] ;
  assign WILL_FIRE_put_read_mem_resp_put = EN_put_read_mem_resp_put ;

  // action method put_pa_from_tlb_put
  assign RDY_put_pa_from_tlb_put = !ff_from_tlb_rv[40] ;
  assign CAN_FIRE_put_pa_from_tlb_put = !ff_from_tlb_rv[40] ;
  assign WILL_FIRE_put_pa_from_tlb_put = EN_put_pa_from_tlb_put ;

  // action method ma_cache_enable
  assign RDY_ma_cache_enable = 1'd1 ;
  assign CAN_FIRE_ma_cache_enable = 1'd1 ;
  assign WILL_FIRE_ma_cache_enable = EN_ma_cache_enable ;

  // action method ma_curr_priv
  assign RDY_ma_curr_priv = 1'd1 ;
  assign CAN_FIRE_ma_curr_priv = 1'd1 ;
  assign WILL_FIRE_ma_curr_priv = EN_ma_curr_priv ;

  // value method mv_cache_available
  assign mv_cache_available =
	     !ff_core_response_rv[42] && ff_core_request_FULL_N &&
	     !rg_fence_stall &&
	     !m_fillbuffer_mv_fbfull &&
	     !rg_performing_replay ;
  assign RDY_mv_cache_available = 1'd1 ;

  // submodule ff_core_request
  FIFO2 #(.width(32'd67), .guarded(1'd1)) ff_core_request(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(ff_core_request_D_IN),
							  .ENQ(ff_core_request_ENQ),
							  .DEQ(ff_core_request_DEQ),
							  .CLR(ff_core_request_CLR),
							  .D_OUT(ff_core_request_D_OUT),
							  .FULL_N(ff_core_request_FULL_N),
							  .EMPTY_N(ff_core_request_EMPTY_N));

  // submodule ff_pending_req
  FIFO2 #(.width(32'd7), .guarded(1'd0)) ff_pending_req(.RST(RST_N),
							.CLK(CLK),
							.D_IN(ff_pending_req_D_IN),
							.ENQ(ff_pending_req_ENQ),
							.DEQ(ff_pending_req_DEQ),
							.CLR(ff_pending_req_CLR),
							.D_OUT(ff_pending_req_D_OUT),
							.FULL_N(ff_pending_req_FULL_N),
							.EMPTY_N(ff_pending_req_EMPTY_N));

  // submodule ff_read_mem_request
  FIFO2 #(.width(32'd44), .guarded(1'd1)) ff_read_mem_request(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(ff_read_mem_request_D_IN),
							      .ENQ(ff_read_mem_request_ENQ),
							      .DEQ(ff_read_mem_request_DEQ),
							      .CLR(ff_read_mem_request_CLR),
							      .D_OUT(ff_read_mem_request_D_OUT),
							      .FULL_N(ff_read_mem_request_FULL_N),
							      .EMPTY_N(ff_read_mem_request_EMPTY_N));

  // submodule m_data
  mkicache_data #(.id(id)) m_data(.CLK(CLK),
				  .RST_N(RST_N),
				  .ma_request_banks(m_data_ma_request_banks),
				  .ma_request_dataline(m_data_ma_request_dataline),
				  .ma_request_index(m_data_ma_request_index),
				  .ma_request_read_write(m_data_ma_request_read_write),
				  .ma_request_way(m_data_ma_request_way),
				  .mv_read_response_blocknum(m_data_mv_read_response_blocknum),
				  .mv_read_response_wayselect(m_data_mv_read_response_wayselect),
				  .EN_ma_request(m_data_EN_ma_request),
				  .RDY_ma_request(),
				  .mv_read_response(m_data_mv_read_response),
				  .RDY_mv_read_response());

  // submodule m_fillbuffer
  mkicache_fb_v2 #(.id(id)) m_fillbuffer(.CLK(CLK),
					 .RST_N(RST_N),
					 .ma_fill_from_memory_fbindex(m_fillbuffer_ma_fill_from_memory_fbindex),
					 .ma_fill_from_memory_init_bank(m_fillbuffer_ma_fill_from_memory_init_bank),
					 .ma_fill_from_memory_mem_resp(m_fillbuffer_ma_fill_from_memory_mem_resp),
					 .mav_allocate_line_address(m_fillbuffer_mav_allocate_line_address),
					 .mav_allocate_line_dataline(m_fillbuffer_mav_allocate_line_dataline),
					 .mav_allocate_line_from_ram(m_fillbuffer_mav_allocate_line_from_ram),
					 .mav_polling_response_address(m_fillbuffer_mav_polling_response_address),
					 .mav_polling_response_fbindex(m_fillbuffer_mav_polling_response_fbindex),
					 .mav_polling_response_fill(m_fillbuffer_mav_polling_response_fill),
					 .EN_mav_allocate_line(m_fillbuffer_EN_mav_allocate_line),
					 .EN_ma_fill_from_memory(m_fillbuffer_EN_ma_fill_from_memory),
					 .EN_ma_perform_release(m_fillbuffer_EN_ma_perform_release),
					 .EN_mav_polling_response(m_fillbuffer_EN_mav_polling_response),
					 .mv_fbfull(m_fillbuffer_mv_fbfull),
					 .mv_fbempty(m_fillbuffer_mv_fbempty),
					 .mv_fbhead_valid(m_fillbuffer_mv_fbhead_valid),
					 .mav_allocate_line(m_fillbuffer_mav_allocate_line),
					 .RDY_mav_allocate_line(),
					 .RDY_ma_fill_from_memory(),
					 .mv_release_info(m_fillbuffer_mv_release_info),
					 .RDY_mv_release_info(),
					 .RDY_ma_perform_release(),
					 .mav_polling_response(m_fillbuffer_mav_polling_response),
					 .RDY_mav_polling_response());

  // submodule m_tag
  mkicache_tag #(.id(id)) m_tag(.CLK(CLK),
				.RST_N(RST_N),
				.ma_request_address(m_tag_ma_request_address),
				.ma_request_index(m_tag_ma_request_index),
				.ma_request_read_write(m_tag_ma_request_read_write),
				.ma_request_way(m_tag_ma_request_way),
				.mv_read_response_address_in(m_tag_mv_read_response_address_in),
				.mv_read_response_wayselect(m_tag_mv_read_response_wayselect),
				.EN_ma_request(m_tag_EN_ma_request),
				.RDY_ma_request(),
				.mv_read_response(m_tag_mv_read_response),
				.RDY_mv_read_response());

  // rule RL_rl_ram_check
  assign CAN_FIRE_RL_rl_ram_check =
	     ff_from_tlb_rv_port1__read[40] && ff_core_request_EMPTY_N &&
	     EN_ma_curr_priv &&
	     EN_ma_cache_enable &&
	     !ff_core_request_D_OUT[2] &&
	     !rg_handling_miss &&
	     !rg_performing_replay &&
	     !rg_polling_mode &&
	     !m_fillbuffer_mv_fbfull ;
  assign WILL_FIRE_RL_rl_ram_check = CAN_FIRE_RL_rl_ram_check ;

  // rule RL_rl_fillbuffer_check
  assign CAN_FIRE_RL_rl_fillbuffer_check =
	     ff_from_tlb_rv_port1__read[40] && ff_core_request_EMPTY_N &&
	     !ff_core_request_D_OUT[2] ;
  assign WILL_FIRE_RL_rl_fillbuffer_check = CAN_FIRE_RL_rl_fillbuffer_check ;

  // rule RL_rl_fill_from_memory
  assign CAN_FIRE_RL_rl_fill_from_memory =
	     ff_read_mem_response_rv_port1__read[66] &&
	     ff_pending_req_EMPTY_N &&
	     !ff_pending_req_D_OUT[0] ;
  assign WILL_FIRE_RL_rl_fill_from_memory = CAN_FIRE_RL_rl_fill_from_memory ;

  // rule RL_rl_capture_io_response
  assign CAN_FIRE_RL_rl_capture_io_response =
	     ff_read_mem_response_rv_port1__read[66] &&
	     ff_core_request_EMPTY_N &&
	     ff_pending_req_EMPTY_N &&
	     ff_pending_req_D_OUT[0] ;
  assign WILL_FIRE_RL_rl_capture_io_response =
	     CAN_FIRE_RL_rl_capture_io_response ;

  // rule RL_rl_fence_operation
  assign CAN_FIRE_RL_rl_fence_operation =
	     ff_core_request_EMPTY_N && ff_core_request_D_OUT[2] &&
	     rg_fence_stall &&
	     m_fillbuffer_mv_fbempty &&
	     !rg_performing_replay ;
  assign WILL_FIRE_RL_rl_fence_operation = CAN_FIRE_RL_rl_fence_operation ;

  // rule RL_rl_response_to_core
  assign CAN_FIRE_RL_rl_response_to_core =
	     ff_core_request_EMPTY_N && ff_from_tlb_rv_port1__read[40] &&
	     !ff_core_response_rv[42] &&
	     !ff_core_request_D_OUT[2] &&
	     (wr_fault_whas__83_AND_wr_fault_wget__84_85_OR__ETC___d295 ||
	      IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	      2'd1) ;
  assign WILL_FIRE_RL_rl_response_to_core = CAN_FIRE_RL_rl_response_to_core ;

  // rule RL_rl_perform_replay
  assign CAN_FIRE_RL_rl_perform_replay = rg_performing_replay ;
  assign WILL_FIRE_RL_rl_perform_replay = rg_performing_replay ;

  // rule RL_rl_send_memory_request
  assign CAN_FIRE_RL_rl_send_memory_request =
	     ff_from_tlb_rv_port1__read[40] && EN_ma_cache_enable &&
	     ff_read_mem_request_FULL_N &&
	     ff_core_request_EMPTY_N &&
	     IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 ==
	     2'd0 &&
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd0 &&
	     !m_fillbuffer_mv_fbfull &&
	     !wr_fault_whas &&
	     !ff_core_request_D_OUT[2] &&
	     ff_pending_req_FULL_N ;
  assign WILL_FIRE_RL_rl_send_memory_request =
	     CAN_FIRE_RL_rl_send_memory_request ;

  // rule RL_rl_release_from_fillbuffer
  assign CAN_FIRE_RL_rl_release_from_fillbuffer =
	     !replacement_rg_init &&
	     (m_fillbuffer_mv_fbfull || rg_fence_stall ||
	      NOT_ff_core_request_notEmpty__49_50_AND_NOT_wr_ETC___d860) &&
	     !m_fillbuffer_mv_fbempty &&
	     m_fillbuffer_mv_fbhead_valid &&
	     !rg_performing_replay ;
  assign WILL_FIRE_RL_rl_release_from_fillbuffer =
	     CAN_FIRE_RL_rl_release_from_fillbuffer && !EN_put_core_req_put ;

  // rule __me_check_2
  assign CAN_FIRE___me_check_2 = 1'b1 ;
  assign WILL_FIRE___me_check_2 = 1'b1 ;

  // rule RL_replacement_initialize_lfsr
  assign CAN_FIRE_RL_replacement_initialize_lfsr = replacement_rg_init ;
  assign WILL_FIRE_RL_replacement_initialize_lfsr = replacement_rg_init ;

  // inputs to muxes for submodule ports
  assign MUX_m_data_ma_request_1__SEL_1 =
	     EN_put_core_req_put && ma_cache_enable_c ;
  assign MUX_m_data_ma_request_1__SEL_2 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_rg_performing_replay_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     !m_fillbuffer_mv_release_info[0] &&
	     m_fillbuffer_mv_release_info__38_BITS_12_TO_7__ETC___d858 ;
  assign MUX_v_reg_valid_0_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd0 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_1_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd1 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_10_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd10 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_11_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd11 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_12_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd12 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_13_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd13 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_14_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd14 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_15_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd15 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_16_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd16 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_17_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd17 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_18_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd18 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_19_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd19 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_2_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd2 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_20_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd20 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_21_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd21 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_22_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd22 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_23_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd23 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_24_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd24 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_25_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd25 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_26_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd26 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_27_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd27 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_28_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd28 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_29_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd29 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_3_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd3 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_30_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd30 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_31_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd31 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_32_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd32 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_33_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd33 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_34_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd34 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_35_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd35 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_36_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd36 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_37_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd37 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_38_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd38 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_39_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd39 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_4_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd4 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_40_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd40 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_41_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd41 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_42_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd42 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_43_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd43 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_44_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd44 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_45_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd45 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_46_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd46 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_47_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd47 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_48_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd48 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_49_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd49 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_5_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd5 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_50_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd50 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_51_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd51 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_52_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd52 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_53_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd53 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_54_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd54 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_55_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd55 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_56_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd56 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_57_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd57 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_58_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd58 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_59_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd59 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_6_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd6 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_60_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd60 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_61_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd61 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_62_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd62 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_63_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd63 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_7_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd7 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_8_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd8 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_v_reg_valid_9_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd9 &&
	     !m_fillbuffer_mv_release_info[0] ;
  assign MUX_replacement_random_r_write_1__VAL_2 =
	     replacement_random_r[0] ?
	       { 1'd1, replacement_random_r[3:2], ~replacement_random_r[1] } :
	       { 1'd0, replacement_random_r[3:1] } ;
  assign MUX_v_reg_valid_0_write_1__VAL_1 = valid__h47370 | x__h49168 ;

  // inlined wires
  assign wr_fault_whas =
	     WILL_FIRE_RL_rl_ram_check &&
	     (fn_pmp_lookup___d165[7] || ff_from_tlb_rv_port1__read[7]) ;
  assign wr_ram_state_wget =
	     (lv_hitmask__h12637 != 4'd0 && ma_cache_enable_c) ? 2'd1 : 2'd0 ;
  assign wr_ram_state_whas =
	     WILL_FIRE_RL_rl_ram_check && !fn_pmp_lookup___d165[7] &&
	     !ff_from_tlb_rv_port1__read[7] ;
  assign wr_ram_response_wget =
	     { response_word__h12978,
	       fn_pmp_lookup___d165[7] || ff_from_tlb_rv_port1__read[7],
	       lv_response_cause__h12999,
	       ff_core_request_D_OUT[1:0] } ;
  assign wr_fb_state_wget =
	     m_fillbuffer_mav_polling_response[1] ?
	       (m_fillbuffer_mav_polling_response[0] ? 2'd1 : 2'd2) :
	       2'd0 ;
  assign wr_fb_response_wget =
	     { m_fillbuffer_mav_polling_response[37:6],
	       m_fillbuffer_mav_polling_response[38],
	       7'd1,
	       ff_core_request_D_OUT[1:0] } ;
  assign wr_fb_response_whas =
	     WILL_FIRE_RL_rl_fillbuffer_check &&
	     m_fillbuffer_mav_polling_response[1] &&
	     m_fillbuffer_mav_polling_response[0] ;
  assign wr_nc_response_wget =
	     { response_word__h46870[31:0],
	       ff_read_mem_response_rv_port1__read[0],
	       7'd1,
	       ff_core_request_D_OUT[1:0] } ;
  assign _mav_allocate_line_RL_rl_send_memory_request_EN_m_fillbuffer_wget =
	     ma_cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 ;
  assign ff_core_response_rv_port0__write_1 =
	     { 1'd1,
	       lv_response_word__h17319,
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d371,
	       lv_response_cause__h17321,
	       lv_response_epochs__h17322 } ;
  assign ff_core_response_rv_port1__read =
	     CAN_FIRE_RL_rl_response_to_core ?
	       ff_core_response_rv_port0__write_1 :
	       ff_core_response_rv ;
  assign ff_core_response_rv_port1__write_1 =
	     { 1'd0,
	       42'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_core_response_rv_port2__read =
	     EN_get_core_resp_get ?
	       ff_core_response_rv_port1__write_1 :
	       ff_core_response_rv_port1__read ;
  assign ff_read_mem_response_rv_port0__write_1 =
	     { 1'd1, put_read_mem_resp_put } ;
  assign ff_read_mem_response_rv_port1__read =
	     EN_put_read_mem_resp_put ?
	       ff_read_mem_response_rv_port0__write_1 :
	       ff_read_mem_response_rv ;
  assign ff_read_mem_response_rv_EN_port1__write =
	     WILL_FIRE_RL_rl_capture_io_response ||
	     WILL_FIRE_RL_rl_fill_from_memory ;
  assign ff_read_mem_response_rv_port1__write_1 =
	     { 1'd0,
	       66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_read_mem_response_rv_port2__read =
	     ff_read_mem_response_rv_EN_port1__write ?
	       ff_read_mem_response_rv_port1__write_1 :
	       ff_read_mem_response_rv_port1__read ;
  assign ff_from_tlb_rv_port0__write_1 = { 1'd1, put_pa_from_tlb_put } ;
  assign ff_from_tlb_rv_port1__read =
	     EN_put_pa_from_tlb_put ?
	       ff_from_tlb_rv_port0__write_1 :
	       ff_from_tlb_rv ;
  assign ff_from_tlb_rv_port1__write_1 =
	     { 1'd0,
	       40'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign ff_from_tlb_rv_port2__read =
	     CAN_FIRE_RL_rl_response_to_core ?
	       ff_from_tlb_rv_port1__write_1 :
	       ff_from_tlb_rv_port1__read ;

  // register ff_core_response_rv
  assign ff_core_response_rv_D_IN = ff_core_response_rv_port2__read ;
  assign ff_core_response_rv_EN = 1'b1 ;

  // register ff_from_tlb_rv
  assign ff_from_tlb_rv_D_IN = ff_from_tlb_rv_port2__read ;
  assign ff_from_tlb_rv_EN = 1'b1 ;

  // register ff_read_mem_response_rv
  assign ff_read_mem_response_rv_D_IN = ff_read_mem_response_rv_port2__read ;
  assign ff_read_mem_response_rv_EN = 1'b1 ;

  // register replacement_random_r
  always@(replacement_rg_init or
	  MUX_m_data_ma_request_1__SEL_2 or
	  MUX_replacement_random_r_write_1__VAL_2 or
	  WILL_FIRE_RL_rl_fence_operation)
  case (1'b1)
    replacement_rg_init: replacement_random_r_D_IN = 4'd1;
    MUX_m_data_ma_request_1__SEL_2:
	replacement_random_r_D_IN = MUX_replacement_random_r_write_1__VAL_2;
    WILL_FIRE_RL_rl_fence_operation: replacement_random_r_D_IN = 4'd1;
    default: replacement_random_r_D_IN = 4'bxxxx /* unspecified value */ ;
  endcase
  assign replacement_random_r_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ||
	     replacement_rg_init ;

  // register replacement_rg_init
  assign replacement_rg_init_D_IN = 1'd0 ;
  assign replacement_rg_init_EN = replacement_rg_init ;

  // register rg_fence_stall
  assign rg_fence_stall_D_IN = EN_put_core_req_put && put_core_req_put[2] ;
  assign rg_fence_stall_EN =
	     EN_put_core_req_put || WILL_FIRE_RL_rl_fence_operation ;

  // register rg_handling_miss
  assign rg_handling_miss_D_IN = WILL_FIRE_RL_rl_send_memory_request ;
  assign rg_handling_miss_EN =
	     WILL_FIRE_RL_rl_response_to_core ||
	     WILL_FIRE_RL_rl_send_memory_request ;

  // register rg_performing_replay
  assign rg_performing_replay_D_IN = MUX_rg_performing_replay_write_1__SEL_1 ;
  assign rg_performing_replay_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     !m_fillbuffer_mv_release_info[0] &&
	     m_fillbuffer_mv_release_info__38_BITS_12_TO_7__ETC___d858 ||
	     rg_performing_replay ;

  // register rg_polling_mode
  assign rg_polling_mode_D_IN =
	     m_fillbuffer_mav_polling_response[1] &&
	     !m_fillbuffer_mav_polling_response[0] ;
  assign rg_polling_mode_EN = CAN_FIRE_RL_rl_fillbuffer_check ;

  // register rg_recent_req
  assign rg_recent_req_D_IN = set_index__h52204 ;
  assign rg_recent_req_EN = EN_put_core_req_put ;

  // register v_reg_valid_0
  assign v_reg_valid_0_D_IN =
	     MUX_v_reg_valid_0_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_0_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd0 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_1
  assign v_reg_valid_1_D_IN =
	     MUX_v_reg_valid_1_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_1_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd1 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_10
  assign v_reg_valid_10_D_IN =
	     MUX_v_reg_valid_10_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_10_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd10 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_11
  assign v_reg_valid_11_D_IN =
	     MUX_v_reg_valid_11_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_11_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd11 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_12
  assign v_reg_valid_12_D_IN =
	     MUX_v_reg_valid_12_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_12_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd12 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_13
  assign v_reg_valid_13_D_IN =
	     MUX_v_reg_valid_13_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_13_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd13 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_14
  assign v_reg_valid_14_D_IN =
	     MUX_v_reg_valid_14_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_14_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd14 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_15
  assign v_reg_valid_15_D_IN =
	     MUX_v_reg_valid_15_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_15_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd15 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_16
  assign v_reg_valid_16_D_IN =
	     MUX_v_reg_valid_16_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_16_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd16 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_17
  assign v_reg_valid_17_D_IN =
	     MUX_v_reg_valid_17_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_17_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd17 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_18
  assign v_reg_valid_18_D_IN =
	     MUX_v_reg_valid_18_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_18_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd18 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_19
  assign v_reg_valid_19_D_IN =
	     MUX_v_reg_valid_19_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_19_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd19 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_2
  assign v_reg_valid_2_D_IN =
	     MUX_v_reg_valid_2_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_2_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd2 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_20
  assign v_reg_valid_20_D_IN =
	     MUX_v_reg_valid_20_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_20_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd20 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_21
  assign v_reg_valid_21_D_IN =
	     MUX_v_reg_valid_21_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_21_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd21 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_22
  assign v_reg_valid_22_D_IN =
	     MUX_v_reg_valid_22_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_22_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd22 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_23
  assign v_reg_valid_23_D_IN =
	     MUX_v_reg_valid_23_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_23_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd23 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_24
  assign v_reg_valid_24_D_IN =
	     MUX_v_reg_valid_24_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_24_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd24 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_25
  assign v_reg_valid_25_D_IN =
	     MUX_v_reg_valid_25_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_25_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd25 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_26
  assign v_reg_valid_26_D_IN =
	     MUX_v_reg_valid_26_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_26_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd26 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_27
  assign v_reg_valid_27_D_IN =
	     MUX_v_reg_valid_27_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_27_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd27 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_28
  assign v_reg_valid_28_D_IN =
	     MUX_v_reg_valid_28_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_28_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd28 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_29
  assign v_reg_valid_29_D_IN =
	     MUX_v_reg_valid_29_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_29_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd29 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_3
  assign v_reg_valid_3_D_IN =
	     MUX_v_reg_valid_3_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_3_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd3 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_30
  assign v_reg_valid_30_D_IN =
	     MUX_v_reg_valid_30_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_30_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd30 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_31
  assign v_reg_valid_31_D_IN =
	     MUX_v_reg_valid_31_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_31_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd31 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_32
  assign v_reg_valid_32_D_IN =
	     MUX_v_reg_valid_32_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_32_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd32 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_33
  assign v_reg_valid_33_D_IN =
	     MUX_v_reg_valid_33_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_33_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd33 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_34
  assign v_reg_valid_34_D_IN =
	     MUX_v_reg_valid_34_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_34_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd34 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_35
  assign v_reg_valid_35_D_IN =
	     MUX_v_reg_valid_35_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_35_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd35 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_36
  assign v_reg_valid_36_D_IN =
	     MUX_v_reg_valid_36_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_36_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd36 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_37
  assign v_reg_valid_37_D_IN =
	     MUX_v_reg_valid_37_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_37_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd37 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_38
  assign v_reg_valid_38_D_IN =
	     MUX_v_reg_valid_38_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_38_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd38 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_39
  assign v_reg_valid_39_D_IN =
	     MUX_v_reg_valid_39_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_39_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd39 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_4
  assign v_reg_valid_4_D_IN =
	     MUX_v_reg_valid_4_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_4_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd4 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_40
  assign v_reg_valid_40_D_IN =
	     MUX_v_reg_valid_40_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_40_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd40 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_41
  assign v_reg_valid_41_D_IN =
	     MUX_v_reg_valid_41_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_41_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd41 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_42
  assign v_reg_valid_42_D_IN =
	     MUX_v_reg_valid_42_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_42_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd42 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_43
  assign v_reg_valid_43_D_IN =
	     MUX_v_reg_valid_43_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_43_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd43 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_44
  assign v_reg_valid_44_D_IN =
	     MUX_v_reg_valid_44_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_44_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd44 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_45
  assign v_reg_valid_45_D_IN =
	     MUX_v_reg_valid_45_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_45_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd45 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_46
  assign v_reg_valid_46_D_IN =
	     MUX_v_reg_valid_46_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_46_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd46 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_47
  assign v_reg_valid_47_D_IN =
	     MUX_v_reg_valid_47_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_47_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd47 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_48
  assign v_reg_valid_48_D_IN =
	     MUX_v_reg_valid_48_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_48_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd48 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_49
  assign v_reg_valid_49_D_IN =
	     MUX_v_reg_valid_49_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_49_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd49 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_5
  assign v_reg_valid_5_D_IN =
	     MUX_v_reg_valid_5_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_5_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd5 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_50
  assign v_reg_valid_50_D_IN =
	     MUX_v_reg_valid_50_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_50_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd50 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_51
  assign v_reg_valid_51_D_IN =
	     MUX_v_reg_valid_51_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_51_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd51 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_52
  assign v_reg_valid_52_D_IN =
	     MUX_v_reg_valid_52_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_52_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd52 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_53
  assign v_reg_valid_53_D_IN =
	     MUX_v_reg_valid_53_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_53_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd53 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_54
  assign v_reg_valid_54_D_IN =
	     MUX_v_reg_valid_54_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_54_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd54 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_55
  assign v_reg_valid_55_D_IN =
	     MUX_v_reg_valid_55_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_55_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd55 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_56
  assign v_reg_valid_56_D_IN =
	     MUX_v_reg_valid_56_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_56_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd56 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_57
  assign v_reg_valid_57_D_IN =
	     MUX_v_reg_valid_57_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_57_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd57 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_58
  assign v_reg_valid_58_D_IN =
	     MUX_v_reg_valid_58_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_58_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd58 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_59
  assign v_reg_valid_59_D_IN =
	     MUX_v_reg_valid_59_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_59_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd59 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_6
  assign v_reg_valid_6_D_IN =
	     MUX_v_reg_valid_6_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_6_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd6 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_60
  assign v_reg_valid_60_D_IN =
	     MUX_v_reg_valid_60_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_60_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd60 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_61
  assign v_reg_valid_61_D_IN =
	     MUX_v_reg_valid_61_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_61_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd61 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_62
  assign v_reg_valid_62_D_IN =
	     MUX_v_reg_valid_62_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_62_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd62 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_63
  assign v_reg_valid_63_D_IN =
	     MUX_v_reg_valid_63_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_63_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd63 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_7
  assign v_reg_valid_7_D_IN =
	     MUX_v_reg_valid_7_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_7_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd7 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_8
  assign v_reg_valid_8_D_IN =
	     MUX_v_reg_valid_8_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_8_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd8 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // register v_reg_valid_9
  assign v_reg_valid_9_D_IN =
	     MUX_v_reg_valid_9_write_1__SEL_1 ?
	       MUX_v_reg_valid_0_write_1__VAL_1 :
	       4'd0 ;
  assign v_reg_valid_9_EN =
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     m_fillbuffer_mv_release_info[12:7] == 6'd9 &&
	     !m_fillbuffer_mv_release_info[0] ||
	     WILL_FIRE_RL_rl_fence_operation ;

  // submodule ff_core_request
  assign ff_core_request_D_IN = put_core_req_put ;
  assign ff_core_request_ENQ = EN_put_core_req_put ;
  assign ff_core_request_DEQ =
	     WILL_FIRE_RL_rl_fence_operation ||
	     WILL_FIRE_RL_rl_response_to_core ;
  assign ff_core_request_CLR = 1'b0 ;

  // submodule ff_pending_req
  assign ff_pending_req_D_IN =
	     { phyaddr__h45987[5:2],
	       m_fillbuffer_mav_allocate_line,
	       !ma_cache_enable_c ||
	       ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 } ;
  assign ff_pending_req_ENQ = CAN_FIRE_RL_rl_send_memory_request ;
  assign ff_pending_req_DEQ =
	     WILL_FIRE_RL_rl_fill_from_memory &&
	     ff_read_mem_response_rv_port1__read[1] ||
	     WILL_FIRE_RL_rl_capture_io_response ;
  assign ff_pending_req_CLR = 1'b0 ;

  // submodule ff_read_mem_request
  assign ff_read_mem_request_D_IN =
	     { phyaddr__h45987,
	       x_burst_len__h46010,
	       burst_size__h45984,
	       !ma_cache_enable_c ||
	       ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 } ;
  assign ff_read_mem_request_ENQ = CAN_FIRE_RL_rl_send_memory_request ;
  assign ff_read_mem_request_DEQ = EN_get_read_mem_req_get ;
  assign ff_read_mem_request_CLR = 1'b0 ;

  // submodule m_data
  assign m_data_ma_request_banks = 16'd65535 ;
  assign m_data_ma_request_dataline = m_fillbuffer_mv_release_info[544:33] ;
  always@(MUX_m_data_ma_request_1__SEL_1 or
	  set_index__h52204 or
	  MUX_m_data_ma_request_1__SEL_2 or
	  m_fillbuffer_mv_release_info or
	  rg_performing_replay or rg_recent_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_m_data_ma_request_1__SEL_1:
	  m_data_ma_request_index = set_index__h52204;
      MUX_m_data_ma_request_1__SEL_2:
	  m_data_ma_request_index = m_fillbuffer_mv_release_info[12:7];
      rg_performing_replay: m_data_ma_request_index = rg_recent_req;
      default: m_data_ma_request_index = 6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  assign m_data_ma_request_read_write =
	     !MUX_m_data_ma_request_1__SEL_1 && !rg_performing_replay ;
  always@(MUX_m_data_ma_request_1__SEL_1 or
	  MUX_m_data_ma_request_1__SEL_2 or v__h47367 or rg_performing_replay)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_m_data_ma_request_1__SEL_1:
	  m_data_ma_request_way = 2'bxx /* unspecified value */ ;
      MUX_m_data_ma_request_1__SEL_2: m_data_ma_request_way = v__h47367;
      rg_performing_replay:
	  m_data_ma_request_way = 2'bxx /* unspecified value */ ;
      default: m_data_ma_request_way = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign m_data_mv_read_response_blocknum =
	     ff_from_tlb_rv_port1__read[13:10] ;
  assign m_data_mv_read_response_wayselect = lv_hitmask__h12637 ;
  assign m_data_EN_ma_request =
	     EN_put_core_req_put && ma_cache_enable_c ||
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     !m_fillbuffer_mv_release_info[0] ||
	     rg_performing_replay ;

  // submodule m_fillbuffer
  assign m_fillbuffer_ma_fill_from_memory_fbindex =
	     ff_pending_req_D_OUT[2:1] ;
  assign m_fillbuffer_ma_fill_from_memory_init_bank =
	     ff_pending_req_D_OUT[6:3] ;
  assign m_fillbuffer_ma_fill_from_memory_mem_resp =
	     ff_read_mem_response_rv_port1__read[65:0] ;
  assign m_fillbuffer_mav_allocate_line_address = phyaddr__h45987 ;
  assign m_fillbuffer_mav_allocate_line_dataline =
	     512'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  ;
  assign m_fillbuffer_mav_allocate_line_from_ram = 1'd0 ;
  assign m_fillbuffer_mav_polling_response_address = phyaddr__h12187 ;
  assign m_fillbuffer_mav_polling_response_fbindex =
	     ff_pending_req_D_OUT[2:1] ;
  assign m_fillbuffer_mav_polling_response_fill = ff_pending_req_EMPTY_N ;
  assign m_fillbuffer_EN_mav_allocate_line =
	     WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	     !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 ;
  assign m_fillbuffer_EN_ma_fill_from_memory =
	     CAN_FIRE_RL_rl_fill_from_memory ;
  assign m_fillbuffer_EN_ma_perform_release =
	     WILL_FIRE_RL_rl_release_from_fillbuffer ;
  assign m_fillbuffer_EN_mav_polling_response =
	     CAN_FIRE_RL_rl_fillbuffer_check ;

  // submodule m_tag
  assign m_tag_ma_request_address = m_fillbuffer_mv_release_info[32:1] ;
  always@(MUX_m_data_ma_request_1__SEL_1 or
	  set_index__h52204 or
	  MUX_m_data_ma_request_1__SEL_2 or
	  m_fillbuffer_mv_release_info or
	  rg_performing_replay or rg_recent_req)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_m_data_ma_request_1__SEL_1:
	  m_tag_ma_request_index = set_index__h52204;
      MUX_m_data_ma_request_1__SEL_2:
	  m_tag_ma_request_index = m_fillbuffer_mv_release_info[12:7];
      rg_performing_replay: m_tag_ma_request_index = rg_recent_req;
      default: m_tag_ma_request_index = 6'bxxxxxx /* unspecified value */ ;
    endcase
  end
  assign m_tag_ma_request_read_write =
	     !MUX_m_data_ma_request_1__SEL_1 && !rg_performing_replay ;
  always@(MUX_m_data_ma_request_1__SEL_1 or
	  MUX_m_data_ma_request_1__SEL_2 or v__h47367 or rg_performing_replay)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_m_data_ma_request_1__SEL_1:
	  m_tag_ma_request_way = 2'bxx /* unspecified value */ ;
      MUX_m_data_ma_request_1__SEL_2: m_tag_ma_request_way = v__h47367;
      rg_performing_replay:
	  m_tag_ma_request_way = 2'bxx /* unspecified value */ ;
      default: m_tag_ma_request_way = 2'bxx /* unspecified value */ ;
    endcase
  end
  assign m_tag_mv_read_response_address_in = phyaddr__h12187 ;
  assign m_tag_mv_read_response_wayselect = 2'bxx /* unspecified value */  ;
  assign m_tag_EN_ma_request =
	     EN_put_core_req_put && ma_cache_enable_c ||
	     WILL_FIRE_RL_rl_release_from_fillbuffer &&
	     !m_fillbuffer_mv_release_info[0] ||
	     rg_performing_replay ;

  // remaining internal signals
  module_fn_pmp_lookup instance_fn_pmp_lookup_0(.fn_pmp_lookup_req({ phyaddr__h12187,
								     2'd2 }),
						.fn_pmp_lookup_priv(ma_curr_priv_c),
						.fn_pmp_lookup_pmpcfg({ { pmp_cfg_3,
									  pmp_cfg_2 },
									pmp_cfg_1,
									pmp_cfg_0 }),
						.fn_pmp_lookup_pmpaddr({ { pmp_addr_3,
									   pmp_addr_2 },
									 pmp_addr_1,
									 pmp_addr_0 }),
						.fn_pmp_lookup(fn_pmp_lookup___d165));
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 =
	     CAN_FIRE_RL_rl_fillbuffer_check ? wr_fb_state_wget : 2'd2 ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d364 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[9] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d376 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[41] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d384 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[40] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d393 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[39] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d401 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[38] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d410 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[37] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d418 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[36] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d427 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[35] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d435 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[34] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d444 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[33] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d452 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[32] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d461 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[31] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d469 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[30] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d478 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[29] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d486 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[28] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d495 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[27] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d503 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[26] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d512 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[25] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d520 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[24] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d529 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[23] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d537 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[22] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d546 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[21] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d554 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[20] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d563 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[19] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d571 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[18] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d580 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[17] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d588 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[16] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d597 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[15] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d605 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[14] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d614 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[13] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d622 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[12] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d631 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[11] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d639 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[10] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d649 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[8] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d657 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[7] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d665 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[6] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d674 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[5] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d682 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[4] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d691 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[3] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d699 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[2] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d708 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[1] ;
  assign IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d716 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_fb_response_wget[0] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 =
	     CAN_FIRE_RL_rl_capture_io_response ? 2'd1 : 2'd2 ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d361 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[9] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d371 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d361 ||
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d364 ||
	     b__h16276 && wr_ram_response_wget[9] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d374 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[41] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d382 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[40] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d391 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[39] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d399 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[38] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d408 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[37] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d416 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[36] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d425 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[35] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d433 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[34] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d442 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[33] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d450 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[32] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d459 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[31] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d467 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[30] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d476 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[29] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d484 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[28] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d493 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[27] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d501 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[26] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d510 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[25] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d518 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[24] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d527 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[23] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d535 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[22] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d544 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[21] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d552 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[20] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d561 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[19] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d569 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[18] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d578 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[17] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d586 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[16] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d595 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[15] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d603 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[14] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d612 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[13] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d620 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[12] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d629 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[11] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d637 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[10] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d647 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[8] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d655 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[7] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d663 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[6] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d672 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[5] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d680 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[4] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d689 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[3] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d697 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[2] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d706 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[1] ;
  assign IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d714 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 &&
	     !wr_fault_whas &&
	     wr_nc_response_wget[0] ;
  assign IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 =
	     wr_ram_state_whas ? wr_ram_state_wget : 2'd2 ;
  assign NOT_0_CONCAT_m_tag_mv_read_response_ff_from_tl_ETC___d199 =
	     x__h14637 + y__h14638 > 3'd1 ;
  assign NOT_IF_wr_fb_state_whas__96_THEN_wr_fb_state_w_ETC___d737 =
	     IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 !=
	     2'd1 ||
	     wr_fault_whas ||
	     !wr_fb_response_wget[9] ;
  assign NOT_IF_wr_nc_state_whas__86_THEN_wr_nc_state_w_ETC___d733 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 !=
	     2'd1 ||
	     wr_fault_whas ||
	     !wr_nc_response_wget[9] ;
  assign NOT_IF_wr_ram_state_whas__91_THEN_wr_ram_state_ETC___d741 =
	     IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 !=
	     2'd1 &&
	     !wr_fault_whas ||
	     !wr_ram_response_wget[9] ;
  assign NOT_ff_core_request_notEmpty__49_50_AND_NOT_wr_ETC___d860 =
	     !ff_core_request_EMPTY_N && !EN_put_core_req_put &&
	     !m_fillbuffer_mv_release_info__38_BITS_12_TO_7__ETC___d858 ;
  assign b__h16276 =
	     IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 ==
	     2'd1 ||
	     wr_fault_whas ;
  assign burst_size__h45984 =
	     (!ma_cache_enable_c ||
	      ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760) ?
	       3'd2 :
	       3'd3 ;
  assign ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 =
	     ff_from_tlb_rv_port1__read[39:8] < 32'h80000000 ;
  assign lv_cause__h12189 =
	     ff_from_tlb_rv_port1__read[7] ?
	       ff_from_tlb_rv_port1__read[6:0] :
	       7'd1 ;
  assign lv_hitmask__h12637 =
	     m_tag_mv_read_response[35:32] &
	     SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 ;
  assign lv_response_cause__h12999 =
	     (!ff_from_tlb_rv_port1__read[7] && fn_pmp_lookup___d165[7]) ?
	       fn_pmp_lookup___d165[6:0] :
	       lv_cause__h12189 ;
  assign lv_response_cause__h17321 =
	     { IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d647 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d649 ||
	       b__h16276 && wr_ram_response_wget[8],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d655 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d657 ||
	       b__h16276 && wr_ram_response_wget[7],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d663 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d665 ||
	       b__h16276 && wr_ram_response_wget[6],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d672 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d674 ||
	       b__h16276 && wr_ram_response_wget[5],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d680 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d682 ||
	       b__h16276 && wr_ram_response_wget[4],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d689 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d691 ||
	       b__h16276 && wr_ram_response_wget[3],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d697 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d699 ||
	       b__h16276 && wr_ram_response_wget[2] } ;
  assign lv_response_epochs__h17322 =
	     { IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d706 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d708 ||
	       b__h16276 && wr_ram_response_wget[1],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d714 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d716 ||
	       b__h16276 && wr_ram_response_wget[0] } ;
  assign lv_response_word__h17319 =
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d371 ?
	       ff_core_request_D_OUT[66:35] :
	       lv_response_word__h17335 ;
  assign lv_response_word__h17335 =
	     { IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d374 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d376 ||
	       b__h16276 && wr_ram_response_wget[41],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d382 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d384 ||
	       b__h16276 && wr_ram_response_wget[40],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d391 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d393 ||
	       b__h16276 && wr_ram_response_wget[39],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d399 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d401 ||
	       b__h16276 && wr_ram_response_wget[38],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d408 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d410 ||
	       b__h16276 && wr_ram_response_wget[37],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d416 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d418 ||
	       b__h16276 && wr_ram_response_wget[36],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d425 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d427 ||
	       b__h16276 && wr_ram_response_wget[35],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d433 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d435 ||
	       b__h16276 && wr_ram_response_wget[34],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d442 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d444 ||
	       b__h16276 && wr_ram_response_wget[33],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d450 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d452 ||
	       b__h16276 && wr_ram_response_wget[32],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d459 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d461 ||
	       b__h16276 && wr_ram_response_wget[31],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d467 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d469 ||
	       b__h16276 && wr_ram_response_wget[30],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d476 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d478 ||
	       b__h16276 && wr_ram_response_wget[29],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d484 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d486 ||
	       b__h16276 && wr_ram_response_wget[28],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d493 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d495 ||
	       b__h16276 && wr_ram_response_wget[27],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d501 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d503 ||
	       b__h16276 && wr_ram_response_wget[26],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d510 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d512 ||
	       b__h16276 && wr_ram_response_wget[25],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d518 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d520 ||
	       b__h16276 && wr_ram_response_wget[24],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d527 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d529 ||
	       b__h16276 && wr_ram_response_wget[23],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d535 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d537 ||
	       b__h16276 && wr_ram_response_wget[22],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d544 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d546 ||
	       b__h16276 && wr_ram_response_wget[21],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d552 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d554 ||
	       b__h16276 && wr_ram_response_wget[20],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d561 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d563 ||
	       b__h16276 && wr_ram_response_wget[19],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d569 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d571 ||
	       b__h16276 && wr_ram_response_wget[18],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d578 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d580 ||
	       b__h16276 && wr_ram_response_wget[17],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d586 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d588 ||
	       b__h16276 && wr_ram_response_wget[16],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d595 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d597 ||
	       b__h16276 && wr_ram_response_wget[15],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d603 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d605 ||
	       b__h16276 && wr_ram_response_wget[14],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d612 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d614 ||
	       b__h16276 && wr_ram_response_wget[13],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d620 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d622 ||
	       b__h16276 && wr_ram_response_wget[12],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d629 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d631 ||
	       b__h16276 && wr_ram_response_wget[11],
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d637 ||
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d639 ||
	       b__h16276 && wr_ram_response_wget[10] } ;
  assign m_fillbuffer_mv_release_info__38_BITS_12_TO_7__ETC___d858 =
	     m_fillbuffer_mv_release_info[12:7] == rg_recent_req ;
  assign phyaddr__h12187 = ff_from_tlb_rv_port1__read[39:8] ;
  assign phyaddr__h45987 =
	     (!ma_cache_enable_c ||
	      ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760) ?
	       ff_from_tlb_rv_port1__read[39:8] :
	       { ff_from_tlb_rv_port1__read[39:11], 3'd0 } ;
  assign response_word__h12978 = m_data_mv_read_response[31:0] >> x__h13003 ;
  assign response_word__h46870 =
	     ff_read_mem_response_rv_port1__read[65:2] >> x__h46896 ;
  assign set_index__h52204 =
	     put_core_req_put[2] ? 6'd0 : put_core_req_put[14:9] ;
  assign v__h47367 =
	     (valid__h47370 == 4'd15) ?
	       replacement_random_r[1:0] :
	       (valid__h47370[3] ?
		  (valid__h47370[2] ?
		     (valid__h47370[1] ? 2'd0 : 2'd1) :
		     2'd2) :
		  2'd3) ;
  assign wr_fault_whas__83_AND_wr_fault_wget__84_85_OR__ETC___d295 =
	     wr_fault_whas ||
	     IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	     2'd1 ||
	     IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 ==
	     2'd1 ;
  assign x__h13003 = { ff_from_tlb_rv_port1__read[9:8], 3'b0 } ;
  assign x__h14637 = x__h14649 + y__h14650 ;
  assign x__h14649 = x__h14661 + y__h14662 ;
  assign x__h14661 = { 2'd0, lv_hitmask__h12637[3] } ;
  assign x__h16256 = x__h16268 + y__h16269 ;
  assign x__h16268 = { 1'd0, b__h16276 } ;
  assign x__h46896 = { ff_core_request_D_OUT[5:3], 3'b0 } ;
  assign x__h49168 = 4'd1 << v__h47367 ;
  assign x_burst_len__h46010 =
	     (!ma_cache_enable_c ||
	      ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760) ?
	       8'd0 :
	       8'd7 ;
  assign y__h14638 = { 2'd0, lv_hitmask__h12637[0] } ;
  assign y__h14650 = { 2'd0, lv_hitmask__h12637[1] } ;
  assign y__h14662 = { 2'd0, lv_hitmask__h12637[2] } ;
  assign y__h16257 =
	     { 1'd0,
	       IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 ==
	       2'd1 &&
	       !wr_fault_whas } ;
  assign y__h16269 =
	     { 1'd0,
	       IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 ==
	       2'd1 &&
	       !wr_fault_whas } ;
  always@(m_fillbuffer_mv_release_info or
	  v_reg_valid_0 or
	  v_reg_valid_1 or
	  v_reg_valid_2 or
	  v_reg_valid_3 or
	  v_reg_valid_4 or
	  v_reg_valid_5 or
	  v_reg_valid_6 or
	  v_reg_valid_7 or
	  v_reg_valid_8 or
	  v_reg_valid_9 or
	  v_reg_valid_10 or
	  v_reg_valid_11 or
	  v_reg_valid_12 or
	  v_reg_valid_13 or
	  v_reg_valid_14 or
	  v_reg_valid_15 or
	  v_reg_valid_16 or
	  v_reg_valid_17 or
	  v_reg_valid_18 or
	  v_reg_valid_19 or
	  v_reg_valid_20 or
	  v_reg_valid_21 or
	  v_reg_valid_22 or
	  v_reg_valid_23 or
	  v_reg_valid_24 or
	  v_reg_valid_25 or
	  v_reg_valid_26 or
	  v_reg_valid_27 or
	  v_reg_valid_28 or
	  v_reg_valid_29 or
	  v_reg_valid_30 or
	  v_reg_valid_31 or
	  v_reg_valid_32 or
	  v_reg_valid_33 or
	  v_reg_valid_34 or
	  v_reg_valid_35 or
	  v_reg_valid_36 or
	  v_reg_valid_37 or
	  v_reg_valid_38 or
	  v_reg_valid_39 or
	  v_reg_valid_40 or
	  v_reg_valid_41 or
	  v_reg_valid_42 or
	  v_reg_valid_43 or
	  v_reg_valid_44 or
	  v_reg_valid_45 or
	  v_reg_valid_46 or
	  v_reg_valid_47 or
	  v_reg_valid_48 or
	  v_reg_valid_49 or
	  v_reg_valid_50 or
	  v_reg_valid_51 or
	  v_reg_valid_52 or
	  v_reg_valid_53 or
	  v_reg_valid_54 or
	  v_reg_valid_55 or
	  v_reg_valid_56 or
	  v_reg_valid_57 or
	  v_reg_valid_58 or
	  v_reg_valid_59 or
	  v_reg_valid_60 or
	  v_reg_valid_61 or v_reg_valid_62 or v_reg_valid_63)
  begin
    case (m_fillbuffer_mv_release_info[12:7])
      6'd0: valid__h47370 = v_reg_valid_0;
      6'd1: valid__h47370 = v_reg_valid_1;
      6'd2: valid__h47370 = v_reg_valid_2;
      6'd3: valid__h47370 = v_reg_valid_3;
      6'd4: valid__h47370 = v_reg_valid_4;
      6'd5: valid__h47370 = v_reg_valid_5;
      6'd6: valid__h47370 = v_reg_valid_6;
      6'd7: valid__h47370 = v_reg_valid_7;
      6'd8: valid__h47370 = v_reg_valid_8;
      6'd9: valid__h47370 = v_reg_valid_9;
      6'd10: valid__h47370 = v_reg_valid_10;
      6'd11: valid__h47370 = v_reg_valid_11;
      6'd12: valid__h47370 = v_reg_valid_12;
      6'd13: valid__h47370 = v_reg_valid_13;
      6'd14: valid__h47370 = v_reg_valid_14;
      6'd15: valid__h47370 = v_reg_valid_15;
      6'd16: valid__h47370 = v_reg_valid_16;
      6'd17: valid__h47370 = v_reg_valid_17;
      6'd18: valid__h47370 = v_reg_valid_18;
      6'd19: valid__h47370 = v_reg_valid_19;
      6'd20: valid__h47370 = v_reg_valid_20;
      6'd21: valid__h47370 = v_reg_valid_21;
      6'd22: valid__h47370 = v_reg_valid_22;
      6'd23: valid__h47370 = v_reg_valid_23;
      6'd24: valid__h47370 = v_reg_valid_24;
      6'd25: valid__h47370 = v_reg_valid_25;
      6'd26: valid__h47370 = v_reg_valid_26;
      6'd27: valid__h47370 = v_reg_valid_27;
      6'd28: valid__h47370 = v_reg_valid_28;
      6'd29: valid__h47370 = v_reg_valid_29;
      6'd30: valid__h47370 = v_reg_valid_30;
      6'd31: valid__h47370 = v_reg_valid_31;
      6'd32: valid__h47370 = v_reg_valid_32;
      6'd33: valid__h47370 = v_reg_valid_33;
      6'd34: valid__h47370 = v_reg_valid_34;
      6'd35: valid__h47370 = v_reg_valid_35;
      6'd36: valid__h47370 = v_reg_valid_36;
      6'd37: valid__h47370 = v_reg_valid_37;
      6'd38: valid__h47370 = v_reg_valid_38;
      6'd39: valid__h47370 = v_reg_valid_39;
      6'd40: valid__h47370 = v_reg_valid_40;
      6'd41: valid__h47370 = v_reg_valid_41;
      6'd42: valid__h47370 = v_reg_valid_42;
      6'd43: valid__h47370 = v_reg_valid_43;
      6'd44: valid__h47370 = v_reg_valid_44;
      6'd45: valid__h47370 = v_reg_valid_45;
      6'd46: valid__h47370 = v_reg_valid_46;
      6'd47: valid__h47370 = v_reg_valid_47;
      6'd48: valid__h47370 = v_reg_valid_48;
      6'd49: valid__h47370 = v_reg_valid_49;
      6'd50: valid__h47370 = v_reg_valid_50;
      6'd51: valid__h47370 = v_reg_valid_51;
      6'd52: valid__h47370 = v_reg_valid_52;
      6'd53: valid__h47370 = v_reg_valid_53;
      6'd54: valid__h47370 = v_reg_valid_54;
      6'd55: valid__h47370 = v_reg_valid_55;
      6'd56: valid__h47370 = v_reg_valid_56;
      6'd57: valid__h47370 = v_reg_valid_57;
      6'd58: valid__h47370 = v_reg_valid_58;
      6'd59: valid__h47370 = v_reg_valid_59;
      6'd60: valid__h47370 = v_reg_valid_60;
      6'd61: valid__h47370 = v_reg_valid_61;
      6'd62: valid__h47370 = v_reg_valid_62;
      6'd63: valid__h47370 = v_reg_valid_63;
    endcase
  end
  always@(ff_from_tlb_rv_port1__read or
	  v_reg_valid_0 or
	  v_reg_valid_1 or
	  v_reg_valid_2 or
	  v_reg_valid_3 or
	  v_reg_valid_4 or
	  v_reg_valid_5 or
	  v_reg_valid_6 or
	  v_reg_valid_7 or
	  v_reg_valid_8 or
	  v_reg_valid_9 or
	  v_reg_valid_10 or
	  v_reg_valid_11 or
	  v_reg_valid_12 or
	  v_reg_valid_13 or
	  v_reg_valid_14 or
	  v_reg_valid_15 or
	  v_reg_valid_16 or
	  v_reg_valid_17 or
	  v_reg_valid_18 or
	  v_reg_valid_19 or
	  v_reg_valid_20 or
	  v_reg_valid_21 or
	  v_reg_valid_22 or
	  v_reg_valid_23 or
	  v_reg_valid_24 or
	  v_reg_valid_25 or
	  v_reg_valid_26 or
	  v_reg_valid_27 or
	  v_reg_valid_28 or
	  v_reg_valid_29 or
	  v_reg_valid_30 or
	  v_reg_valid_31 or
	  v_reg_valid_32 or
	  v_reg_valid_33 or
	  v_reg_valid_34 or
	  v_reg_valid_35 or
	  v_reg_valid_36 or
	  v_reg_valid_37 or
	  v_reg_valid_38 or
	  v_reg_valid_39 or
	  v_reg_valid_40 or
	  v_reg_valid_41 or
	  v_reg_valid_42 or
	  v_reg_valid_43 or
	  v_reg_valid_44 or
	  v_reg_valid_45 or
	  v_reg_valid_46 or
	  v_reg_valid_47 or
	  v_reg_valid_48 or
	  v_reg_valid_49 or
	  v_reg_valid_50 or
	  v_reg_valid_51 or
	  v_reg_valid_52 or
	  v_reg_valid_53 or
	  v_reg_valid_54 or
	  v_reg_valid_55 or
	  v_reg_valid_56 or
	  v_reg_valid_57 or
	  v_reg_valid_58 or
	  v_reg_valid_59 or
	  v_reg_valid_60 or
	  v_reg_valid_61 or v_reg_valid_62 or v_reg_valid_63)
  begin
    case (ff_from_tlb_rv_port1__read[19:14])
      6'd0:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_0;
      6'd1:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_1;
      6'd2:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_2;
      6'd3:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_3;
      6'd4:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_4;
      6'd5:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_5;
      6'd6:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_6;
      6'd7:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_7;
      6'd8:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_8;
      6'd9:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_9;
      6'd10:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_10;
      6'd11:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_11;
      6'd12:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_12;
      6'd13:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_13;
      6'd14:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_14;
      6'd15:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_15;
      6'd16:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_16;
      6'd17:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_17;
      6'd18:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_18;
      6'd19:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_19;
      6'd20:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_20;
      6'd21:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_21;
      6'd22:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_22;
      6'd23:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_23;
      6'd24:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_24;
      6'd25:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_25;
      6'd26:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_26;
      6'd27:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_27;
      6'd28:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_28;
      6'd29:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_29;
      6'd30:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_30;
      6'd31:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_31;
      6'd32:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_32;
      6'd33:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_33;
      6'd34:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_34;
      6'd35:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_35;
      6'd36:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_36;
      6'd37:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_37;
      6'd38:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_38;
      6'd39:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_39;
      6'd40:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_40;
      6'd41:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_41;
      6'd42:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_42;
      6'd43:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_43;
      6'd44:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_44;
      6'd45:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_45;
      6'd46:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_46;
      6'd47:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_47;
      6'd48:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_48;
      6'd49:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_49;
      6'd50:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_50;
      6'd51:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_51;
      6'd52:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_52;
      6'd53:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_53;
      6'd54:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_54;
      6'd55:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_55;
      6'd56:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_56;
      6'd57:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_57;
      6'd58:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_58;
      6'd59:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_59;
      6'd60:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_60;
      6'd61:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_61;
      6'd62:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_62;
      6'd63:
	  SEL_ARR_v_reg_valid_0_4_v_reg_valid_1_5_v_reg__ETC___d150 =
	      v_reg_valid_63;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        ff_core_response_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      42'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	ff_from_tlb_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      40'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	ff_read_mem_response_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      66'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	replacement_random_r <= `BSV_ASSIGNMENT_DELAY 4'd1;
	replacement_rg_init <= `BSV_ASSIGNMENT_DELAY 1'd1;
	rg_fence_stall <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_handling_miss <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_performing_replay <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_polling_mode <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_recent_req <= `BSV_ASSIGNMENT_DELAY 6'd0;
	v_reg_valid_0 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_1 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_10 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_11 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_12 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_13 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_14 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_15 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_16 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_17 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_18 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_19 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_2 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_20 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_21 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_22 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_23 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_24 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_25 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_26 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_27 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_28 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_29 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_3 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_30 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_31 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_32 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_33 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_34 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_35 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_36 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_37 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_38 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_39 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_4 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_40 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_41 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_42 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_43 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_44 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_45 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_46 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_47 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_48 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_49 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_5 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_50 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_51 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_52 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_53 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_54 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_55 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_56 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_57 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_58 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_59 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_6 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_60 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_61 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_62 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_63 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_7 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_8 <= `BSV_ASSIGNMENT_DELAY 4'd0;
	v_reg_valid_9 <= `BSV_ASSIGNMENT_DELAY 4'd0;
      end
    else
      begin
        if (ff_core_response_rv_EN)
	  ff_core_response_rv <= `BSV_ASSIGNMENT_DELAY
	      ff_core_response_rv_D_IN;
	if (ff_from_tlb_rv_EN)
	  ff_from_tlb_rv <= `BSV_ASSIGNMENT_DELAY ff_from_tlb_rv_D_IN;
	if (ff_read_mem_response_rv_EN)
	  ff_read_mem_response_rv <= `BSV_ASSIGNMENT_DELAY
	      ff_read_mem_response_rv_D_IN;
	if (replacement_random_r_EN)
	  replacement_random_r <= `BSV_ASSIGNMENT_DELAY
	      replacement_random_r_D_IN;
	if (replacement_rg_init_EN)
	  replacement_rg_init <= `BSV_ASSIGNMENT_DELAY
	      replacement_rg_init_D_IN;
	if (rg_fence_stall_EN)
	  rg_fence_stall <= `BSV_ASSIGNMENT_DELAY rg_fence_stall_D_IN;
	if (rg_handling_miss_EN)
	  rg_handling_miss <= `BSV_ASSIGNMENT_DELAY rg_handling_miss_D_IN;
	if (rg_performing_replay_EN)
	  rg_performing_replay <= `BSV_ASSIGNMENT_DELAY
	      rg_performing_replay_D_IN;
	if (rg_polling_mode_EN)
	  rg_polling_mode <= `BSV_ASSIGNMENT_DELAY rg_polling_mode_D_IN;
	if (rg_recent_req_EN)
	  rg_recent_req <= `BSV_ASSIGNMENT_DELAY rg_recent_req_D_IN;
	if (v_reg_valid_0_EN)
	  v_reg_valid_0 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_0_D_IN;
	if (v_reg_valid_1_EN)
	  v_reg_valid_1 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_1_D_IN;
	if (v_reg_valid_10_EN)
	  v_reg_valid_10 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_10_D_IN;
	if (v_reg_valid_11_EN)
	  v_reg_valid_11 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_11_D_IN;
	if (v_reg_valid_12_EN)
	  v_reg_valid_12 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_12_D_IN;
	if (v_reg_valid_13_EN)
	  v_reg_valid_13 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_13_D_IN;
	if (v_reg_valid_14_EN)
	  v_reg_valid_14 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_14_D_IN;
	if (v_reg_valid_15_EN)
	  v_reg_valid_15 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_15_D_IN;
	if (v_reg_valid_16_EN)
	  v_reg_valid_16 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_16_D_IN;
	if (v_reg_valid_17_EN)
	  v_reg_valid_17 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_17_D_IN;
	if (v_reg_valid_18_EN)
	  v_reg_valid_18 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_18_D_IN;
	if (v_reg_valid_19_EN)
	  v_reg_valid_19 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_19_D_IN;
	if (v_reg_valid_2_EN)
	  v_reg_valid_2 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_2_D_IN;
	if (v_reg_valid_20_EN)
	  v_reg_valid_20 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_20_D_IN;
	if (v_reg_valid_21_EN)
	  v_reg_valid_21 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_21_D_IN;
	if (v_reg_valid_22_EN)
	  v_reg_valid_22 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_22_D_IN;
	if (v_reg_valid_23_EN)
	  v_reg_valid_23 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_23_D_IN;
	if (v_reg_valid_24_EN)
	  v_reg_valid_24 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_24_D_IN;
	if (v_reg_valid_25_EN)
	  v_reg_valid_25 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_25_D_IN;
	if (v_reg_valid_26_EN)
	  v_reg_valid_26 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_26_D_IN;
	if (v_reg_valid_27_EN)
	  v_reg_valid_27 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_27_D_IN;
	if (v_reg_valid_28_EN)
	  v_reg_valid_28 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_28_D_IN;
	if (v_reg_valid_29_EN)
	  v_reg_valid_29 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_29_D_IN;
	if (v_reg_valid_3_EN)
	  v_reg_valid_3 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_3_D_IN;
	if (v_reg_valid_30_EN)
	  v_reg_valid_30 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_30_D_IN;
	if (v_reg_valid_31_EN)
	  v_reg_valid_31 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_31_D_IN;
	if (v_reg_valid_32_EN)
	  v_reg_valid_32 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_32_D_IN;
	if (v_reg_valid_33_EN)
	  v_reg_valid_33 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_33_D_IN;
	if (v_reg_valid_34_EN)
	  v_reg_valid_34 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_34_D_IN;
	if (v_reg_valid_35_EN)
	  v_reg_valid_35 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_35_D_IN;
	if (v_reg_valid_36_EN)
	  v_reg_valid_36 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_36_D_IN;
	if (v_reg_valid_37_EN)
	  v_reg_valid_37 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_37_D_IN;
	if (v_reg_valid_38_EN)
	  v_reg_valid_38 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_38_D_IN;
	if (v_reg_valid_39_EN)
	  v_reg_valid_39 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_39_D_IN;
	if (v_reg_valid_4_EN)
	  v_reg_valid_4 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_4_D_IN;
	if (v_reg_valid_40_EN)
	  v_reg_valid_40 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_40_D_IN;
	if (v_reg_valid_41_EN)
	  v_reg_valid_41 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_41_D_IN;
	if (v_reg_valid_42_EN)
	  v_reg_valid_42 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_42_D_IN;
	if (v_reg_valid_43_EN)
	  v_reg_valid_43 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_43_D_IN;
	if (v_reg_valid_44_EN)
	  v_reg_valid_44 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_44_D_IN;
	if (v_reg_valid_45_EN)
	  v_reg_valid_45 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_45_D_IN;
	if (v_reg_valid_46_EN)
	  v_reg_valid_46 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_46_D_IN;
	if (v_reg_valid_47_EN)
	  v_reg_valid_47 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_47_D_IN;
	if (v_reg_valid_48_EN)
	  v_reg_valid_48 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_48_D_IN;
	if (v_reg_valid_49_EN)
	  v_reg_valid_49 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_49_D_IN;
	if (v_reg_valid_5_EN)
	  v_reg_valid_5 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_5_D_IN;
	if (v_reg_valid_50_EN)
	  v_reg_valid_50 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_50_D_IN;
	if (v_reg_valid_51_EN)
	  v_reg_valid_51 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_51_D_IN;
	if (v_reg_valid_52_EN)
	  v_reg_valid_52 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_52_D_IN;
	if (v_reg_valid_53_EN)
	  v_reg_valid_53 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_53_D_IN;
	if (v_reg_valid_54_EN)
	  v_reg_valid_54 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_54_D_IN;
	if (v_reg_valid_55_EN)
	  v_reg_valid_55 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_55_D_IN;
	if (v_reg_valid_56_EN)
	  v_reg_valid_56 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_56_D_IN;
	if (v_reg_valid_57_EN)
	  v_reg_valid_57 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_57_D_IN;
	if (v_reg_valid_58_EN)
	  v_reg_valid_58 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_58_D_IN;
	if (v_reg_valid_59_EN)
	  v_reg_valid_59 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_59_D_IN;
	if (v_reg_valid_6_EN)
	  v_reg_valid_6 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_6_D_IN;
	if (v_reg_valid_60_EN)
	  v_reg_valid_60 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_60_D_IN;
	if (v_reg_valid_61_EN)
	  v_reg_valid_61 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_61_D_IN;
	if (v_reg_valid_62_EN)
	  v_reg_valid_62 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_62_D_IN;
	if (v_reg_valid_63_EN)
	  v_reg_valid_63 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_63_D_IN;
	if (v_reg_valid_7_EN)
	  v_reg_valid_7 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_7_D_IN;
	if (v_reg_valid_8_EN)
	  v_reg_valid_8 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_8_D_IN;
	if (v_reg_valid_9_EN)
	  v_reg_valid_9 <= `BSV_ASSIGNMENT_DELAY v_reg_valid_9_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    ff_core_response_rv = 43'h2AAAAAAAAAA;
    ff_from_tlb_rv = 41'h0AAAAAAAAAA;
    ff_read_mem_response_rv = 67'h2AAAAAAAAAAAAAAAA;
    replacement_random_r = 4'hA;
    replacement_rg_init = 1'h0;
    rg_fence_stall = 1'h0;
    rg_handling_miss = 1'h0;
    rg_performing_replay = 1'h0;
    rg_polling_mode = 1'h0;
    rg_recent_req = 6'h2A;
    v_reg_valid_0 = 4'hA;
    v_reg_valid_1 = 4'hA;
    v_reg_valid_10 = 4'hA;
    v_reg_valid_11 = 4'hA;
    v_reg_valid_12 = 4'hA;
    v_reg_valid_13 = 4'hA;
    v_reg_valid_14 = 4'hA;
    v_reg_valid_15 = 4'hA;
    v_reg_valid_16 = 4'hA;
    v_reg_valid_17 = 4'hA;
    v_reg_valid_18 = 4'hA;
    v_reg_valid_19 = 4'hA;
    v_reg_valid_2 = 4'hA;
    v_reg_valid_20 = 4'hA;
    v_reg_valid_21 = 4'hA;
    v_reg_valid_22 = 4'hA;
    v_reg_valid_23 = 4'hA;
    v_reg_valid_24 = 4'hA;
    v_reg_valid_25 = 4'hA;
    v_reg_valid_26 = 4'hA;
    v_reg_valid_27 = 4'hA;
    v_reg_valid_28 = 4'hA;
    v_reg_valid_29 = 4'hA;
    v_reg_valid_3 = 4'hA;
    v_reg_valid_30 = 4'hA;
    v_reg_valid_31 = 4'hA;
    v_reg_valid_32 = 4'hA;
    v_reg_valid_33 = 4'hA;
    v_reg_valid_34 = 4'hA;
    v_reg_valid_35 = 4'hA;
    v_reg_valid_36 = 4'hA;
    v_reg_valid_37 = 4'hA;
    v_reg_valid_38 = 4'hA;
    v_reg_valid_39 = 4'hA;
    v_reg_valid_4 = 4'hA;
    v_reg_valid_40 = 4'hA;
    v_reg_valid_41 = 4'hA;
    v_reg_valid_42 = 4'hA;
    v_reg_valid_43 = 4'hA;
    v_reg_valid_44 = 4'hA;
    v_reg_valid_45 = 4'hA;
    v_reg_valid_46 = 4'hA;
    v_reg_valid_47 = 4'hA;
    v_reg_valid_48 = 4'hA;
    v_reg_valid_49 = 4'hA;
    v_reg_valid_5 = 4'hA;
    v_reg_valid_50 = 4'hA;
    v_reg_valid_51 = 4'hA;
    v_reg_valid_52 = 4'hA;
    v_reg_valid_53 = 4'hA;
    v_reg_valid_54 = 4'hA;
    v_reg_valid_55 = 4'hA;
    v_reg_valid_56 = 4'hA;
    v_reg_valid_57 = 4'hA;
    v_reg_valid_58 = 4'hA;
    v_reg_valid_59 = 4'hA;
    v_reg_valid_6 = 4'hA;
    v_reg_valid_60 = 4'hA;
    v_reg_valid_61 = 4'hA;
    v_reg_valid_62 = 4'hA;
    v_reg_valid_63 = 4'hA;
    v_reg_valid_7 = 4'hA;
    v_reg_valid_8 = 4'hA;
    v_reg_valid_9 = 4'hA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  TASK_testplusargs___d1034 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  TASK_testplusargs___d1035 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  TASK_testplusargs___d1036 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_034_OR_TASK_testplusargs_035_ETC___d1042 =
	(TASK_testplusargs___d1034 ||
	 TASK_testplusargs___d1035 && TASK_testplusargs___d1036) &&
	put_core_req_put[2];
    TASK_testplusargs_034_OR_TASK_testplusargs_035_ETC___d1044 =
	(TASK_testplusargs___d1034 ||
	 TASK_testplusargs___d1035 && TASK_testplusargs___d1036) &&
	!put_core_req_put[2];
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  v__h52097 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write("[%10d", v__h52097, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write("[%2d]ICACHE: Receiving request: ", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write("ICache_core_request { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write("'h%h", put_core_req_put[66:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write(", ", "fence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  TASK_testplusargs_034_OR_TASK_testplusargs_035_ETC___d1042)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  TASK_testplusargs_034_OR_TASK_testplusargs_035_ETC___d1044)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write("'h%h", put_core_req_put[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1034 ||
	   TASK_testplusargs___d1035 && TASK_testplusargs___d1036))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  TASK_testplusargs___d1048 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  TASK_testplusargs___d1049 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  TASK_testplusargs___d1050 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put)
	begin
	  v__h52469 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1048 ||
	   TASK_testplusargs___d1049 && TASK_testplusargs___d1050))
	$write("[%10d", v__h52469, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1048 ||
	   TASK_testplusargs___d1049 && TASK_testplusargs___d1050))
	$write("[%2d]ICACHE: set:%d", id, set_index__h52204);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_put_core_req_put &&
	  (TASK_testplusargs___d1048 ||
	   TASK_testplusargs___d1049 && TASK_testplusargs___d1050))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d38 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d39 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d40 = $test$plusargs("l1");
	  #0;
	end
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d46 =
	(TASK_testplusargs___d38 ||
	 TASK_testplusargs___d39 && TASK_testplusargs___d40) &&
	ff_from_tlb_rv_port1__read[7];
    TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d67 =
	(TASK_testplusargs___d38 ||
	 TASK_testplusargs___d39 && TASK_testplusargs___d40) &&
	!ff_from_tlb_rv_port1__read[7];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  v__h12257 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d38 ||
	   TASK_testplusargs___d39 && TASK_testplusargs___d40))
	$write("[%10d", v__h12257, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d38 ||
	   TASK_testplusargs___d39 && TASK_testplusargs___d40))
	$write("[%2d]ICACHE: Response from PA:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d38 ||
	   TASK_testplusargs___d39 && TASK_testplusargs___d40))
	$write("{pa:%h", ff_from_tlb_rv_port1__read[39:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d46)
	if (ff_from_tlb_rv_port1__read[6:0] == 7'd0)
	  $write(", caused ", "Instruction-Address-Misaligned-Trap");
	else
	  if (ff_from_tlb_rv_port1__read[6:0] == 7'd1)
	    $write(", caused ", "Instruction-Access-Fault-Trap");
	  else
	    if (ff_from_tlb_rv_port1__read[6:0] == 7'd4)
	      $write(", caused ", "Load-Address-Misaligned-Trap");
	    else
	      if (ff_from_tlb_rv_port1__read[6:0] == 7'd5)
		$write(", caused ", "Load-Access-Fault-Trap");
	      else
		if (ff_from_tlb_rv_port1__read[6:0] == 7'd6)
		  $write(", caused ", "Store-Address-Misaligned-Trap");
		else
		  if (ff_from_tlb_rv_port1__read[6:0] == 7'd7)
		    $write(", caused ", "Store-Access-Fault-Trap");
		  else
		    if (ff_from_tlb_rv_port1__read[6:0] == 7'd12)
		      $write(", caused ", "Instruction-Page-Fault-Trap");
		    else
		      if (ff_from_tlb_rv_port1__read[6:0] == 7'd13)
			$write(", caused ", "Load-Page-Fault-Trap");
		      else
			if (ff_from_tlb_rv_port1__read[6:0] == 7'd15)
			  $write(", caused ", "Store-Page-Fault-Trap");
			else
			  $write(", caused ", "UNKNOWN CAUSE VALUE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  TASK_testplusargs_8_OR_TASK_testplusargs_9_AND_ETC___d67)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d38 ||
	   TASK_testplusargs___d39 && TASK_testplusargs___d40))
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d38 ||
	   TASK_testplusargs___d39 && TASK_testplusargs___d40))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d68 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d69 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d70 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  v__h12534 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write("[%10d", v__h12534, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write("[%2d]ICACHE: lv_tag_resp:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write("TagResponse { ", "waymask: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write("'h%h", m_tag_mv_read_response[35:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write(", ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write("'h%h", m_tag_mv_read_response[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d68 ||
	   TASK_testplusargs___d69 && TASK_testplusargs___d70))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d77 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d78 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d79 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  v__h12705 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write("[%10d", v__h12705, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write("[%2d]ICACHE: lv_data_resp:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write("DataResponse { ", "line: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write("'h%h", m_data_mv_read_response[543:32]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write(", ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write("'h%h", m_data_mv_read_response[31:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d77 ||
	   TASK_testplusargs___d78 && TASK_testplusargs___d79))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  NOT_0_CONCAT_m_tag_mv_read_response_ff_from_tl_ETC___d199)
	$display("Dynamic assertion failed: \"cache_subsystem/src/icache/icache.bsv\", line 515, column 48\nICACHE: More than one way is a hit in the cache");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  NOT_0_CONCAT_m_tag_mv_read_response_ff_from_tl_ETC___d199)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d200 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d201 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d202 = $test$plusargs("l2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  v__h14924 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("[%10d", v__h14924, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("[%2d]ICACHE: RAM Req:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("ICache_core_request { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("'h%h", ff_core_request_D_OUT[66:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write(", ", "fence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("'h%h", ff_core_request_D_OUT[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d200 ||
	   TASK_testplusargs___d201 && TASK_testplusargs___d202))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d207 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d208 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  TASK_testplusargs___d209 = $test$plusargs("l2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check)
	begin
	  v__h15077 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d207 ||
	   TASK_testplusargs___d208 && TASK_testplusargs___d209))
	$write("[%10d", v__h15077, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d207 ||
	   TASK_testplusargs___d208 && TASK_testplusargs___d209))
	$write("[%2d]ICACHE: RAM Hit:%b ", id, lv_hitmask__h12637);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  (TASK_testplusargs___d207 ||
	   TASK_testplusargs___d208 && TASK_testplusargs___d209))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  TASK_testplusargs___d215 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  TASK_testplusargs___d216 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  TASK_testplusargs___d217 = $test$plusargs("l2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  v__h15185 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("[%10d", v__h15185, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("[%2d]ICACHE: FB: Req:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("ICache_core_request { ", "address: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("'h%h", ff_core_request_D_OUT[66:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write(", ", "fence: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("'h%h", ff_core_request_D_OUT[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d215 ||
	   TASK_testplusargs___d216 && TASK_testplusargs___d217))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  TASK_testplusargs___d224 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  TASK_testplusargs___d225 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  TASK_testplusargs___d226 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d235 =
	(TASK_testplusargs___d224 ||
	 TASK_testplusargs___d225 && TASK_testplusargs___d226) &&
	m_fillbuffer_mav_polling_response[1];
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d237 =
	(TASK_testplusargs___d224 ||
	 TASK_testplusargs___d225 && TASK_testplusargs___d226) &&
	!m_fillbuffer_mav_polling_response[1];
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d239 =
	(TASK_testplusargs___d224 ||
	 TASK_testplusargs___d225 && TASK_testplusargs___d226) &&
	m_fillbuffer_mav_polling_response[0];
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d241 =
	(TASK_testplusargs___d224 ||
	 TASK_testplusargs___d225 && TASK_testplusargs___d226) &&
	!m_fillbuffer_mav_polling_response[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check)
	begin
	  v__h15402 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("[%10d", v__h15402, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("[%2d]ICACHE: FB: Polling Response:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("PollingResponse { ", "err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("'h%h", m_fillbuffer_mav_polling_response[38]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write(", ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("'h%h", m_fillbuffer_mav_polling_response[37:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write(", ", "waymask: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("'h%h", m_fillbuffer_mav_polling_response[5:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write(", ", "line_hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d235)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d237)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write(", ", "word_hit: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d239)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d241)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  (TASK_testplusargs___d224 ||
	   TASK_testplusargs___d225 && TASK_testplusargs___d226))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1])
	begin
	  TASK_testplusargs___d245 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1])
	begin
	  TASK_testplusargs___d246 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1])
	begin
	  TASK_testplusargs___d247 = $test$plusargs("l1");
	  #0;
	end
    m_fillbuffer_mav_polling_response_30_BIT_1_34__ETC___d250 =
	m_fillbuffer_mav_polling_response[1] &&
	(TASK_testplusargs___d245 ||
	 TASK_testplusargs___d246 && TASK_testplusargs___d247);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1])
	begin
	  v__h15599 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response_30_BIT_1_34__ETC___d250)
	$write("[%10d", v__h15599, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response_30_BIT_1_34__ETC___d250)
	$write("[%2d]ICACHE: FB: Hit in Line:%b for Addr:%h",
	       id,
	       m_fillbuffer_mav_polling_response[5:2],
	       ff_from_tlb_rv_port1__read[39:8]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response_30_BIT_1_34__ETC___d250)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response[0])
	begin
	  TASK_testplusargs___d255 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response[0])
	begin
	  TASK_testplusargs___d256 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response[0])
	begin
	  TASK_testplusargs___d257 = $test$plusargs("l1");
	  #0;
	end
    m_fillbuffer_mav_polling_response_30_BIT_0_38__ETC___d260 =
	m_fillbuffer_mav_polling_response[0] &&
	(TASK_testplusargs___d255 ||
	 TASK_testplusargs___d256 && TASK_testplusargs___d257);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response[0])
	begin
	  v__h15823 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response_30_BIT_0_38__ETC___d260)
	$write("[%10d", v__h15823, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response_30_BIT_0_38__ETC___d260)
	$write("[%2d]ICACHE: FB: Required Word found", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  m_fillbuffer_mav_polling_response_30_BIT_0_38__ETC___d260)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  !m_fillbuffer_mav_polling_response[0])
	begin
	  TASK_testplusargs___d263 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  !m_fillbuffer_mav_polling_response[0])
	begin
	  TASK_testplusargs___d264 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  !m_fillbuffer_mav_polling_response[0])
	begin
	  TASK_testplusargs___d265 = $test$plusargs("l1");
	  #0;
	end
    NOT_m_fillbuffer_mav_polling_response_30_BIT_0_ETC___d268 =
	!m_fillbuffer_mav_polling_response[0] &&
	(TASK_testplusargs___d263 ||
	 TASK_testplusargs___d264 && TASK_testplusargs___d265);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  !m_fillbuffer_mav_polling_response[0])
	begin
	  v__h15996 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  NOT_m_fillbuffer_mav_polling_response_30_BIT_0_ETC___d268)
	$write("[%10d", v__h15996, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  NOT_m_fillbuffer_mav_polling_response_30_BIT_0_ETC___d268)
	$write("[%2d]ICACHE: FB: Required word not available yet", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  m_fillbuffer_mav_polling_response[1] &&
	  NOT_m_fillbuffer_mav_polling_response_30_BIT_0_ETC___d268)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  !m_fillbuffer_mav_polling_response[1])
	begin
	  TASK_testplusargs___d271 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  !m_fillbuffer_mav_polling_response[1])
	begin
	  TASK_testplusargs___d272 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  !m_fillbuffer_mav_polling_response[1])
	begin
	  TASK_testplusargs___d273 = $test$plusargs("l1");
	  #0;
	end
    NOT_m_fillbuffer_mav_polling_response_30_BIT_1_ETC___d276 =
	!m_fillbuffer_mav_polling_response[1] &&
	(TASK_testplusargs___d271 ||
	 TASK_testplusargs___d272 && TASK_testplusargs___d273);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  !m_fillbuffer_mav_polling_response[1])
	begin
	  v__h16120 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  NOT_m_fillbuffer_mav_polling_response_30_BIT_1_ETC___d276)
	$write("[%10d", v__h16120, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  NOT_m_fillbuffer_mav_polling_response_30_BIT_1_ETC___d276)
	$write("[%2d]ICACHE: FB: Miss", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fillbuffer_check &&
	  NOT_m_fillbuffer_mav_polling_response_30_BIT_1_ETC___d276)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory)
	begin
	  TASK_testplusargs___d804 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory)
	begin
	  TASK_testplusargs___d805 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory)
	begin
	  TASK_testplusargs___d806 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d812 =
	(TASK_testplusargs___d804 ||
	 TASK_testplusargs___d805 && TASK_testplusargs___d806) &&
	ff_read_mem_response_rv_port1__read[1];
    TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d814 =
	(TASK_testplusargs___d804 ||
	 TASK_testplusargs___d805 && TASK_testplusargs___d806) &&
	!ff_read_mem_response_rv_port1__read[1];
    TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d816 =
	(TASK_testplusargs___d804 ||
	 TASK_testplusargs___d805 && TASK_testplusargs___d806) &&
	ff_read_mem_response_rv_port1__read[0];
    TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d818 =
	(TASK_testplusargs___d804 ||
	 TASK_testplusargs___d805 && TASK_testplusargs___d806) &&
	!ff_read_mem_response_rv_port1__read[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory)
	begin
	  v__h46741 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write("[%10d", v__h46741, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write("[%2d]ICACHE: FILL: Response from Memory:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write("ICache_mem_readresp { ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write("'h%h", ff_read_mem_response_rv_port1__read[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write(", ", "last: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d812)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d814)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write(", ", "err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d816)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  TASK_testplusargs_04_OR_TASK_testplusargs_05_A_ETC___d818)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fill_from_memory &&
	  (TASK_testplusargs___d804 ||
	   TASK_testplusargs___d805 && TASK_testplusargs___d806))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response)
	begin
	  TASK_testplusargs___d827 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response)
	begin
	  TASK_testplusargs___d828 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response)
	begin
	  TASK_testplusargs___d829 = $test$plusargs("l2");
	  #0;
	end
    TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d833 =
	(TASK_testplusargs___d827 ||
	 TASK_testplusargs___d828 && TASK_testplusargs___d829) &&
	ff_read_mem_response_rv_port1__read[1];
    TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d834 =
	(TASK_testplusargs___d827 ||
	 TASK_testplusargs___d828 && TASK_testplusargs___d829) &&
	!ff_read_mem_response_rv_port1__read[1];
    TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d835 =
	(TASK_testplusargs___d827 ||
	 TASK_testplusargs___d828 && TASK_testplusargs___d829) &&
	ff_read_mem_response_rv_port1__read[0];
    TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d836 =
	(TASK_testplusargs___d827 ||
	 TASK_testplusargs___d828 && TASK_testplusargs___d829) &&
	!ff_read_mem_response_rv_port1__read[0];
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response)
	begin
	  v__h47037 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write("[%10d", v__h47037, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write("[%2d]ICACHE: NC Response from Memory: ", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write("ICache_mem_readresp { ", "data: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write("'h%h", ff_read_mem_response_rv_port1__read[65:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write(", ", "last: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d833)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d834)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write(", ", "err: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d835)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  TASK_testplusargs_27_OR_TASK_testplusargs_28_A_ETC___d836)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write(" }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_capture_io_response &&
	  (TASK_testplusargs___d827 ||
	   TASK_testplusargs___d828 && TASK_testplusargs___d829))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation)
	begin
	  TASK_testplusargs___d13 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation)
	begin
	  TASK_testplusargs___d14 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation)
	begin
	  TASK_testplusargs___d15 = $test$plusargs("l1");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation)
	begin
	  v__h6482 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation &&
	  (TASK_testplusargs___d13 ||
	   TASK_testplusargs___d14 && TASK_testplusargs___d15))
	$write("[%10d", v__h6482, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation &&
	  (TASK_testplusargs___d13 ||
	   TASK_testplusargs___d14 && TASK_testplusargs___d15))
	$write("[%2d]ICACHE : Fence operation in progress", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_fence_operation &&
	  (TASK_testplusargs___d13 ||
	   TASK_testplusargs___d14 && TASK_testplusargs___d15))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core && !wr_fault_whas &&
	  x__h16256 + y__h16257 != 2'd1)
	$display("Dynamic assertion failed: \"cache_subsystem/src/icache/icache.bsv\", line 598, column 51\nMore than one data structure shows a hit");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core && !wr_fault_whas &&
	  x__h16256 + y__h16257 != 2'd1)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d318 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d319 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d320 = $test$plusargs("l0");
	  #0;
	end
    IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d323 =
	IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 == 2'd1 &&
	!wr_fault_whas &&
	(TASK_testplusargs___d318 ||
	 TASK_testplusargs___d319 && TASK_testplusargs___d320);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  v__h16565 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d323)
	$write("[%10d", v__h16565, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d323)
	$write("[%2d]ICACHE: Response: Hit from SRAM", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d323)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d325 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d326 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d327 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_25_OR_TASK_testplusargs_26_A_ETC___d339 =
	(TASK_testplusargs___d325 ||
	 TASK_testplusargs___d326 && TASK_testplusargs___d327) &&
	wr_fb_response_whas &&
	!wr_fb_response_wget[9];
    TASK_testplusargs_25_OR_TASK_testplusargs_26_A_ETC___d343 =
	(TASK_testplusargs___d325 ||
	 TASK_testplusargs___d326 && TASK_testplusargs___d327) &&
	(!wr_fb_response_whas || wr_fb_response_wget[9]);
    IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330 =
	IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	!wr_fault_whas &&
	(TASK_testplusargs___d325 ||
	 TASK_testplusargs___d326 && TASK_testplusargs___d327);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  v__h16764 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("[%10d", v__h16764, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("[%2d]ICACHE: Response: Hit from Fillbuffer: ", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("IMem_core_response { ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("'h%h", wr_fb_response_wget[41:10]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	  !wr_fault_whas &&
	  TASK_testplusargs_25_OR_TASK_testplusargs_26_A_ETC___d339)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd1 &&
	  !wr_fault_whas &&
	  TASK_testplusargs_25_OR_TASK_testplusargs_26_A_ETC___d343)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("'h%h", wr_fb_response_wget[8:2]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("'h%h", wr_fb_response_wget[1:0], " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d330)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d349 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d350 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  TASK_testplusargs___d351 = $test$plusargs("l0");
	  #0;
	end
    IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d354 =
	IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 == 2'd1 &&
	!wr_fault_whas &&
	(TASK_testplusargs___d349 ||
	 TASK_testplusargs___d350 && TASK_testplusargs___d351);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d288 == 2'd1 &&
	  !wr_fault_whas)
	begin
	  v__h17062 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d354)
	$write("[%10d", v__h17062, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d354)
	$write("[%2d]ICACHE: Response: Hit from NC", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d354)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core)
	begin
	  TASK_testplusargs___d724 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core)
	begin
	  TASK_testplusargs___d725 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core)
	begin
	  TASK_testplusargs___d726 = $test$plusargs("l0");
	  #0;
	end
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d744 =
	(TASK_testplusargs___d724 ||
	 TASK_testplusargs___d725 && TASK_testplusargs___d726) &&
	NOT_IF_wr_nc_state_whas__86_THEN_wr_nc_state_w_ETC___d733 &&
	NOT_IF_wr_fb_state_whas__96_THEN_wr_fb_state_w_ETC___d737 &&
	NOT_IF_wr_ram_state_whas__91_THEN_wr_ram_state_ETC___d741;
    TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d745 =
	(TASK_testplusargs___d724 ||
	 TASK_testplusargs___d725 && TASK_testplusargs___d726) &&
	IF_wr_nc_state_whas__86_THEN_wr_nc_state_wget__ETC___d371;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core)
	begin
	  v__h45904 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("[%10d", v__h45904, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("[%2d]ICACHE: Responding to Core:", id);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("IMem_core_response { ", "word: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("'h%h", lv_response_word__h17319);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write(", ", "trap: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d744)
	$write("False");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  TASK_testplusargs_24_OR_TASK_testplusargs_25_A_ETC___d745)
	$write("True");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write(", ", "cause: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("'h%h", lv_response_cause__h17321);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write(", ", "epochs: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("'h%h", lv_response_epochs__h17322, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_response_to_core &&
	  (TASK_testplusargs___d724 ||
	   TASK_testplusargs___d725 && TASK_testplusargs___d726))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay)
	begin
	  TASK_testplusargs___d841 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay)
	begin
	  TASK_testplusargs___d842 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay)
	begin
	  TASK_testplusargs___d843 = $test$plusargs("l0");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay)
	begin
	  v__h47282 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay &&
	  (TASK_testplusargs___d841 ||
	   TASK_testplusargs___d842 && TASK_testplusargs___d843))
	$write("[%10d", v__h47282, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay &&
	  (TASK_testplusargs___d841 ||
	   TASK_testplusargs___d842 && TASK_testplusargs___d843))
	$write("[%2d]ICACHE: Replaying Req. Index:%d", id, rg_recent_req);
    if (RST_N != `BSV_RESET_VALUE)
      if (rg_performing_replay &&
	  (TASK_testplusargs___d841 ||
	   TASK_testplusargs___d842 && TASK_testplusargs___d843))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  TASK_testplusargs___d771 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  TASK_testplusargs___d772 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  TASK_testplusargs___d773 = $test$plusargs("l0");
	  #0;
	end
    wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d776 =
	ma_cache_enable_c &&
	!ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 &&
	(TASK_testplusargs___d771 ||
	 TASK_testplusargs___d772 && TASK_testplusargs___d773);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  v__h46180 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d776)
	$write("[%10d", v__h46180, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d776)
	$write("[%2d]ICACHE: MemReq: Allocating Fbindex:%d",
	       id,
	       m_fillbuffer_mav_allocate_line);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d776)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  (!ma_cache_enable_c ||
	   ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760))
	begin
	  TASK_testplusargs___d781 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  (!ma_cache_enable_c ||
	   ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760))
	begin
	  TASK_testplusargs___d782 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  (!ma_cache_enable_c ||
	   ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760))
	begin
	  TASK_testplusargs___d783 = $test$plusargs("l0");
	  #0;
	end
    NOT_wr_cache_enable_wget__88_59_OR_ff_from_tlb_ETC___d786 =
	(!ma_cache_enable_c ||
	 ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760) &&
	(TASK_testplusargs___d781 ||
	 TASK_testplusargs___d782 && TASK_testplusargs___d783);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  (!ma_cache_enable_c ||
	   ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760))
	begin
	  v__h46396 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  NOT_wr_cache_enable_wget__88_59_OR_ff_from_tlb_ETC___d786)
	$write("[%10d", v__h46396, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  NOT_wr_cache_enable_wget__88_59_OR_ff_from_tlb_ETC___d786)
	$write("[%2d]ICACHE: MemReq: Sending NC Request for Addr:%h",
	       id,
	       phyaddr__h45987);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  NOT_wr_cache_enable_wget__88_59_OR_ff_from_tlb_ETC___d786)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  TASK_testplusargs___d788 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  TASK_testplusargs___d789 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  TASK_testplusargs___d790 = $test$plusargs("l0");
	  #0;
	end
    wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d793 =
	ma_cache_enable_c &&
	!ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760 &&
	(TASK_testplusargs___d788 ||
	 TASK_testplusargs___d789 && TASK_testplusargs___d790);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request && ma_cache_enable_c &&
	  !ff_from_tlb_rv_port1__read__9_BITS_39_TO_8_4_U_ETC___d760)
	begin
	  v__h46469 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d793)
	$write("[%10d", v__h46469, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d793)
	$write("[%2d]ICACHE: MemReq: Sending Line Request for Addr:%h",
	       id,
	       phyaddr__h45987);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  wr_cache_enable_wget__88_AND_NOT_ff_from_tlb_r_ETC___d793)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  WILL_FIRE_RL_rl_response_to_core &&
	  IF_wr_fb_state_whas__96_THEN_wr_fb_state_wget__ETC___d298 == 2'd0 &&
	  IF_wr_ram_state_whas__91_THEN_wr_ram_state_wge_ETC___d293 == 2'd0 &&
	  !m_fillbuffer_mv_fbfull &&
	  ff_pending_req_FULL_N &&
	  ff_read_mem_request_FULL_N &&
	  !wr_fault_whas &&
	  ff_from_tlb_rv_port1__read[40] &&
	  ff_core_request_EMPTY_N &&
	  EN_ma_cache_enable)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 644, column 10: (R0002)\n  Conflict-free rules RL_rl_send_memory_request and RL_rl_response_to_core\n  called conflicting methods first and deq of module instance ff_core_request.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_send_memory_request &&
	  WILL_FIRE_RL_rl_response_to_core)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 644, column 10: (R0002)\n  Conflict-free rules RL_rl_send_memory_request and RL_rl_response_to_core\n  called conflicting methods port1__read and port1__write of module instance\n  ff_from_tlb_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer)
	begin
	  TASK_testplusargs___d868 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer)
	begin
	  TASK_testplusargs___d869 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer)
	begin
	  TASK_testplusargs___d870 = $test$plusargs("l2");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer)
	begin
	  v__h47699 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  (TASK_testplusargs___d868 ||
	   TASK_testplusargs___d869 && TASK_testplusargs___d870))
	$write("[%10d", v__h47699, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  (TASK_testplusargs___d868 ||
	   TASK_testplusargs___d869 && TASK_testplusargs___d870))
	$write("[%2d]ICACHE: Release: set%d way:%d valid:%b ",
	       id,
	       m_fillbuffer_mv_release_info[12:7],
	       v__h47367,
	       valid__h47370[v__h47367]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  (TASK_testplusargs___d868 ||
	   TASK_testplusargs___d869 && TASK_testplusargs___d870))
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  !m_fillbuffer_mv_release_info[0])
	begin
	  TASK_testplusargs___d1018 = $test$plusargs("fullverbose");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  !m_fillbuffer_mv_release_info[0])
	begin
	  TASK_testplusargs___d1019 = $test$plusargs("micache");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  !m_fillbuffer_mv_release_info[0])
	begin
	  TASK_testplusargs___d1020 = $test$plusargs("l0");
	  #0;
	end
    NOT_m_fillbuffer_mv_release_info__38_BIT_0_87__ETC___d1023 =
	!m_fillbuffer_mv_release_info[0] &&
	(TASK_testplusargs___d1018 ||
	 TASK_testplusargs___d1019 && TASK_testplusargs___d1020);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  !m_fillbuffer_mv_release_info[0])
	begin
	  v__h51792 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  NOT_m_fillbuffer_mv_release_info__38_BIT_0_87__ETC___d1023)
	$write("[%10d", v__h51792, "] ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  NOT_m_fillbuffer_mv_release_info__38_BIT_0_87__ETC___d1023)
	$write("[%2d]ICACHE: Release: Upd Addr:%h set:%d way:%d data:%h",
	       id,
	       m_fillbuffer_mv_release_info[32:1],
	       m_fillbuffer_mv_release_info[12:7],
	       v__h47367,
	       m_fillbuffer_mv_release_info[544:33]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  NOT_m_fillbuffer_mv_release_info__38_BIT_0_87__ETC___d1023)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  WILL_FIRE_RL_rl_response_to_core &&
	  !m_fillbuffer_mv_fbfull &&
	  !rg_fence_stall &&
	  !m_fillbuffer_mv_release_info__38_BITS_12_TO_7__ETC___d858 &&
	  !rg_performing_replay &&
	  !m_fillbuffer_mv_fbempty &&
	  !replacement_rg_init &&
	  !EN_put_core_req_put &&
	  m_fillbuffer_mv_fbhead_valid)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 742, column 10: (R0002)\n  Conflict-free rules RL_rl_release_from_fillbuffer and RL_rl_response_to_core\n  called conflicting methods notEmpty and deq of module instance\n  ff_core_request.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  WILL_FIRE_RL_rl_send_memory_request &&
	  !NOT_ff_core_request_notEmpty__49_50_AND_NOT_wr_ETC___d860 &&
	  !rg_performing_replay &&
	  !m_fillbuffer_mv_fbempty &&
	  !rg_fence_stall &&
	  m_fillbuffer_mv_fbhead_valid &&
	  !replacement_rg_init &&
	  _mav_allocate_line_RL_rl_send_memory_request_EN_m_fillbuffer_wget)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 742, column 10: (R0002)\n  Conflict-free rules RL_rl_release_from_fillbuffer and\n  RL_rl_send_memory_request called conflicting methods mv_fbfull and\n  mav_allocate_line of module instance m_fillbuffer.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  WILL_FIRE_RL_rl_send_memory_request &&
	  !rg_performing_replay &&
	  !replacement_rg_init &&
	  (m_fillbuffer_mv_fbfull || rg_fence_stall ||
	   NOT_ff_core_request_notEmpty__49_50_AND_NOT_wr_ETC___d860) &&
	  m_fillbuffer_mv_fbhead_valid &&
	  _mav_allocate_line_RL_rl_send_memory_request_EN_m_fillbuffer_wget)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 742, column 10: (R0002)\n  Conflict-free rules RL_rl_release_from_fillbuffer and\n  RL_rl_send_memory_request called conflicting methods mv_fbempty and\n  mav_allocate_line of module instance m_fillbuffer.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_release_from_fillbuffer &&
	  WILL_FIRE_RL_rl_send_memory_request &&
	  _mav_allocate_line_RL_rl_send_memory_request_EN_m_fillbuffer_wget)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 742, column 10: (R0002)\n  Conflict-free rules RL_rl_release_from_fillbuffer and\n  RL_rl_send_memory_request called conflicting methods mv_release_info and\n  mav_allocate_line of module instance m_fillbuffer.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_ram_check &&
	  WILL_FIRE_RL_rl_release_from_fillbuffer)
	$display("Error: \"cache_subsystem/src/icache/icache.bsv\", line 231, column 53: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_rl_ram_check] and\n  [RL_rl_release_from_fillbuffer] ) fired in the same clock cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkicache

